{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Form, Input, Select, Tag, TimePicker, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\n\nimport { setEn, setZh } from '../state/reducer';\nimport { showModal, hideModal } from '../../../State/action';\n/* lodash */\n\nimport _ from 'lodash';\n/* moment */\n\nimport moment from 'moment-timezone';\nmoment.locale('zh-cn', {\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_')\n});\nconst {\n  Option\n} = Select;\nexport default function ModalBox() {\n  _s();\n\n  const language = useSelector(state => state.language.lang);\n  const tags = useSelector(state => state.restaurant.tags);\n  const selectedList = useSelector(state => state.restaurant.selectedItem);\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n  const [time, setTime] = useState(new Date());\n  const [tagList, setTagList] = useState([]);\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n  const {\n    RangePicker\n  } = TimePicker;\n  const isShow = useSelector(state => state.restaurant.isShow);\n  /* 纽约时间 */\n\n  const inputRef = useRef();\n  const pickerRef = useRef(); // const [ visible,setVisible ] = useState(false);\n\n  /* 确认 */\n\n  function handleOk() {\n    dispatch(hideModal());\n  }\n\n  function handleCancel() {\n    dispatch(showModal());\n  }\n  /* 改变语言 */\n\n\n  async function changeLang(value) {\n    if (value == 'zh-CN') {\n      await dispatch(setZh());\n    } else {\n      await dispatch(setEn());\n    } // setInputValue(selectedList.name[`${language}`]);\n\n  }\n\n  useEffect(() => {\n    setTagList(selectedList.tags);\n  }, [selectedList.tags]);\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    setInputValue(selectedList.name[`${language}`]); // inputRef.current.state.value = inputValue;\n  }, [language, inputValue, selectedList._id]);\n  useEffect(() => {\n    console.log(inputRef.current);\n  }, []);\n  /* 渲染所有的tags列表 */\n\n  function renderTagList() {\n    return _.map(tags, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item,\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* 增加tags */\n\n\n  function changeTag(value) {\n    let cloneList = _.cloneDeep(tagList);\n\n    if (_.indexOf(cloneList, value) == -1) {\n      cloneList.push(value);\n    }\n\n    setTagList(cloneList);\n  }\n  /*删除tags */\n\n\n  function close(index) {\n    let cloneList = _.cloneDeep(tagList);\n\n    cloneList.splice(index, 1);\n    setTagList(cloneList);\n  }\n  /* 渲染餐馆的tags */\n\n\n  function renderTags() {\n    return tagList.map((tag, index) => {\n      let color = tag.length > 5 ? 'geekblue' : 'green';\n\n      if (tag === 'loser') {\n        color = 'volcano';\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        closable: true,\n        onClose: () => {\n          close(index);\n        },\n        style: {\n          marginRight: '10px'\n        },\n        children: tag.toUpperCase()\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  function formatTime(value) {\n    return `${value / 60}:${value % 60}:00`;\n  }\n\n  function gethour(info) {\n    let hourList = [moment(formatTime(info[0]), 'HH:mm:ss'), moment(formatTime(info[1]), 'HH:mm:ss')];\n    return hourList;\n  }\n  /* 修改时间 */\n\n\n  function changeHour(time, timeString) {\n    // return gethour(timeString);\n    console.log('time==>', time);\n    console.log('timeString==>', timeString); // setHour(timeString);\n  }\n  /* 时间选择 */\n\n\n  function renderTimeList() {\n    let array = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];\n    return _.map(array, (item, index) => {\n      let hourInfo = selectedList.hours[index];\n      let result = hourInfo ? [hourInfo.start, hourInfo.end] : ['00:00:00', '00:00:00'];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: true,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n          defaultValue: gethour(result),\n          onChange: changeHour,\n          ref: pickerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, Math.random(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: selectedList.name[`${language}`] // visible={ isShow }\n      ,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u540D\\u79F0\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Input.Group, {\n            compact: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['name', 'province'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Province is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                style: {\n                  width: '80px'\n                },\n                defaultValue: language,\n                onChange: value => {\n                  changeLang(value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"zh-CN\",\n                  children: \"\\u4E2D\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"en-US\",\n                  children: \"\\u82F1\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['address', 'street'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Street is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  width: '50%'\n                },\n                placeholder: \"Input value\",\n                ref: inputRef,\n                value: inputRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u6807\\u7B7E\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: '120px',\n                margin: '0 10px 6px 0'\n              },\n              defaultValue: tags[0],\n              onChange: value => {\n                changeTag(value);\n              },\n              children: renderTagList()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), renderTags()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u5F00\\u95E8\\u65F6\\u95F4\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u7EBD\\u7EA6\\u5F53\\u5730\\u65F6\\u95F4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: newYork\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), renderTimeList()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalBox, \"zNVKgm0rAx9te5+sj8y4ZqklrMc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js"],"names":["React","useState","useEffect","useRef","Modal","Form","Input","Select","Tag","TimePicker","Button","useDispatch","useSelector","setEn","setZh","showModal","hideModal","_","moment","locale","weekdays","split","Option","ModalBox","language","state","lang","tags","restaurant","selectedList","selectedItem","dispatch","inputValue","setInputValue","time","setTime","Date","tagList","setTagList","newYork","tz","format","RangePicker","isShow","inputRef","pickerRef","handleOk","handleCancel","changeLang","value","timer","setInterval","clearInterval","name","_id","console","log","current","renderTagList","map","item","Math","random","changeTag","cloneList","cloneDeep","indexOf","push","close","index","splice","renderTags","tag","color","length","marginRight","toUpperCase","formatTime","gethour","info","hourList","changeHour","timeString","renderTimeList","array","hourInfo","hours","result","start","end","required","message","width","margin"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect, useRef } from 'react';\nimport { Modal,Form, Input, Select ,Tag ,TimePicker ,Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\nimport { setEn,setZh } from '../state/reducer';\nimport { showModal,hideModal } from '../../../State/action';\n\n/* lodash */\nimport _ from 'lodash';\n\n/* moment */\nimport moment from 'moment-timezone';\nmoment.locale('zh-cn',{ weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), });\n\nconst { Option } = Select;\n\nexport default function ModalBox () {\n  const language = useSelector(state=>state.language.lang);\n  const tags = useSelector(state=>state.restaurant.tags);\n  const selectedList = useSelector(state=>state.restaurant.selectedItem);\n\n  const dispatch = useDispatch();\n\n  const [ inputValue,setInputValue ] = useState('');\n  const [ time,setTime ] = useState(new Date());\n  const [ tagList,setTagList ] = useState([]);\n\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n  const { RangePicker } = TimePicker;\n\n  const isShow = useSelector(state=>state.restaurant.isShow);\n\n  /* 纽约时间 */\n  const inputRef = useRef();\n  const pickerRef = useRef();\n\n  // const [ visible,setVisible ] = useState(false);\n\n  /* 确认 */\n  function handleOk (){\n    dispatch(hideModal());\n  }\n\n  function handleCancel () {\n    dispatch(showModal());\n  }\n\n  /* 改变语言 */\n  async function changeLang (value){\n    if(value == 'zh-CN'){\n      await dispatch(setZh());\n    }else{\n      await dispatch(setEn());\n    }\n    // setInputValue(selectedList.name[`${language}`]);\n  }\n\n  useEffect(()=>{\n    setTagList(selectedList.tags);\n  },[ selectedList.tags ]);\n\n  useEffect(()=>{\n    let timer = setInterval(()=>{\n      setTime(new Date());\n    },1000);\n    return ()=>{\n      if (timer){\n        clearInterval(timer);\n      }\n    };\n  },[]);\n\n  useEffect(  ()=>{\n    setInputValue(selectedList.name[`${language}`]);\n    // inputRef.current.state.value = inputValue;\n  },[ language,inputValue,selectedList._id ]);\n\n  useEffect(()=>{\n    console.log( inputRef.current);\n  },[]);\n  /* 渲染所有的tags列表 */\n  function renderTagList (){\n    return _.map(tags,(item)=>{\n      return (\n        <Option value={ item } key={ Math.random() }>{item}</Option>\n      );\n    });\n  }\n  /* 增加tags */\n  function changeTag (value){\n    let cloneList = _.cloneDeep(tagList);\n    if(_.indexOf(cloneList,value) == -1){\n      cloneList.push(value);\n    }\n    setTagList(cloneList);\n  }\n  /*删除tags */\n  function close (index){\n    let cloneList = _.cloneDeep(tagList);\n    cloneList.splice(index,1);\n    setTagList(cloneList);\n  }\n\n  /* 渲染餐馆的tags */\n  function renderTags (){\n    return tagList.map((tag,index) => {\n      let color = tag.length > 5 ? 'geekblue' : 'green';\n      if (tag === 'loser') {\n        color = 'volcano';\n      }\n      return (\n        <Tag color={ color } key={ Math.random() } closable onClose={ ()=>{close(index);} } style={{ marginRight :'10px' }}>\n          {tag.toUpperCase()}\n        </Tag>\n      );\n    });}\n\n  function formatTime (value){\n    return `${value / 60}:${value % 60}:00`;\n  }\n\n  function gethour (info){\n    let hourList = [\n      moment( formatTime(info[0]),'HH:mm:ss'),\n      moment( formatTime(info[1]),'HH:mm:ss')\n    ];\n    return hourList;\n  }\n  /* 修改时间 */\n  function changeHour (time,timeString){\n    // return gethour(timeString);\n    console.log('time==>',time);\n    console.log('timeString==>',timeString);\n    // setHour(timeString);\n  }\n  /* 时间选择 */\n  function renderTimeList (){\n    let array = [ '星期一','星期二','星期三','星期四','星期五','星期六','星期天' ];\n    return _.map(array, (item,index)=>{\n\n      let hourInfo = selectedList.hours[index];\n\n      let result = hourInfo ? [ hourInfo.start,hourInfo.end ] : [ '00:00:00','00:00:00' ];\n\n      return (\n        <div key={ Math.random() }>\n          <Button type=\"primary\" disabled>\n            {item}\n          </Button>\n          <RangePicker defaultValue={ gethour(result) } onChange={ changeHour } ref={ pickerRef }></RangePicker>\n        </div>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <Modal\n        title={ selectedList.name[`${language}`] }\n        // visible={ isShow }\n        onOk={ handleOk }\n        onCancel={ handleCancel }\n      >\n\n        <Form >\n          <Form.Item label=\"餐馆名称：\">\n            <Input.Group compact>\n              <Form.Item\n                name={ [ 'name', 'province' ] }\n                noStyle\n                rules={ [ { required: true, message: 'Province is required' } ] }\n              >\n                <Select style={{ width :'80px' }} defaultValue={ language } onChange={ (value)=>{changeLang(value); } }>\n                  <Option value=\"zh-CN\" >中文</Option>\n                  <Option value=\"en-US\" >英文</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name={ [ 'address', 'street' ] }\n                noStyle\n                rules={ [ { required: true, message: 'Street is required' } ] }\n              >\n                <Input style={{ width : '50%' }} placeholder=\"Input value\" ref={ inputRef }  value={ inputRef } />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n          <Form.Item label=\"餐馆标签：\">\n            <Form.Item>\n              <Select style={{ width :'120px',margin :'0 10px 6px 0' }} defaultValue={ tags[0] } onChange={ (value)=>{changeTag(value);} }>\n                {renderTagList()}\n              </Select>\n              {renderTags()}\n            </Form.Item>\n          </Form.Item>\n          <Form.Item label=\"开门时间：\">\n            <Form.Item>\n              <h3>纽约当地时间</h3>\n              <h1 >{newYork}</h1>\n              {renderTimeList()}\n            </Form.Item>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}