{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Menu/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\n/* antd */\n\nimport { Select, Table, Switch } from 'antd'; // import reqwest from 'reqwest';\n\nconst {\n  Option\n} = Select;\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRest } from '../../State/reducer';\nimport { getMenu } from './state/reducer';\n/* table 数据 */\n\nconst columns = [{\n  title: '菜品',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Male',\n    value: 'male'\n  }, {\n    text: 'Female',\n    value: 'female'\n  }],\n  render: name => name['zh-CN'],\n  width: '40%'\n}, {\n  title: '价格',\n  dataIndex: 'price',\n  // sorter: true,\n  render: price => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\" $\", (price / 100).toFixed(2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 22\n  }, this),\n  width: '30%'\n}, {\n  title: '状态',\n  key: 'available',\n  render: (text, record) => {\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      checked: record.available\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  },\n  width: '30%'\n}];\n\nconst getRandomuserParams = params => {\n  return {\n    results: params.pagination.pageSize,\n    page: params.pagination.current,\n    ...params\n  };\n};\n\nexport default function Menu() {\n  _s();\n\n  const restList = useSelector(state => state.restaurant.list);\n  const foodList = useSelector(state => state.menu.list);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    pageSize: 10\n  });\n  const dispatch = useDispatch();\n\n  let handleTableChange = (pagination, filters, sorter) => {\n    this.fetch({\n      sortField: sorter.field,\n      sortOrder: sorter.order,\n      pagination,\n      ...filters\n    });\n  };\n\n  let fetch = (params = {}) => {\n    this.setState({\n      loading: true\n    });\n    reqwest({\n      url: 'https://randomuser.me/api',\n      method: 'get',\n      type: 'json',\n      data: getRandomuserParams(params)\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        loading: false,\n        data: data.results,\n        pagination: { ...params.pagination,\n          total: 200 // 200 is mock data, you should read it from server\n          // total: data.totalCount,\n\n        }\n      });\n    });\n  };\n\n  useEffect(async () => {\n    await dispatch(getRest()); // test();\n  }, [restList.length]);\n  /* 渲染餐馆名字 */\n\n  function renderNameOptions() {\n    return _.map(restList, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item._id,\n        children: item.name['zh-CN']\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* 选定餐馆 */\n\n\n  async function onChange(value) {\n    console.log(`selected ${value}`);\n    await dispatch(getMenu(value, 1, 10, ''));\n  }\n\n  function onSearch(val) {\n    console.log('search:', val);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      placeholder: \"Select a person\",\n      optionFilterProp: \"children\",\n      onChange: onChange,\n      onSearch: onSearch,\n      filterOption: (input, option) => {\n        return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n      },\n      children: renderNameOptions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: foodList,\n      pagination: pagination,\n      onChange: handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Menu, \"/5jZNtTnf4RsFQ2D56ugDvyZPfw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Menu/Menu.js"],"names":["React","useEffect","Select","Table","Switch","Option","_","useSelector","useDispatch","getRest","getMenu","columns","title","dataIndex","filters","text","value","render","name","width","price","toFixed","key","record","available","getRandomuserParams","params","results","pagination","pageSize","page","current","Menu","restList","state","restaurant","list","foodList","menu","setPagination","useState","dispatch","handleTableChange","sorter","fetch","sortField","field","sortOrder","order","setState","loading","reqwest","url","method","type","data","then","console","log","total","length","renderNameOptions","map","item","_id","Math","random","onChange","onSearch","val","input","option","children","toLowerCase","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\n/* antd */\nimport { Select,Table,Switch } from 'antd';\n\n// import reqwest from 'reqwest';\n\nconst { Option } = Select;\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRest } from '../../State/reducer';\nimport { getMenu } from './state/reducer';\n\n/* table 数据 */\nconst columns = [\n  {\n    title: '菜品',\n    dataIndex: 'name',\n    filters: [\n      { text: 'Male', value: 'male' },\n      { text: 'Female', value: 'female' },\n    ],\n    render: name => name['zh-CN'],\n    width: '40%',\n  },\n  {\n    title: '价格',\n    dataIndex: 'price',\n    // sorter: true,\n    render: price => <span> ${(price / 100).toFixed(2)}</span>,\n    width: '30%',\n  },\n  {\n    title: '状态',\n    key: 'available',\n    render:(text,record)=> {\n      return (\n        <Switch checked={ record.available }/>\n      );\n    },\n    width: '30%',\n\n  },\n];\nconst getRandomuserParams = params => {\n  return {\n    results: params.pagination.pageSize,\n    page: params.pagination.current,\n    ...params,\n  };\n};\nexport default function Menu () {\n  const restList = useSelector(state=>state.restaurant.list);\n  const foodList = useSelector(state=>state.menu.list);\n  const [ pagination,setPagination ] = useState({\n    page: 1,\n    pageSize: 10,\n  });\n  const dispatch = useDispatch();\n\n  let handleTableChange = (pagination, filters, sorter) => {\n    this.fetch({\n      sortField: sorter.field,\n      sortOrder: sorter.order,\n      pagination,\n      ...filters,\n    });\n  };\n\n  let fetch = (params = {}) => {\n    this.setState({ loading: true });\n    reqwest({\n      url: 'https://randomuser.me/api',\n      method: 'get',\n      type: 'json',\n      data: getRandomuserParams(params),\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        loading: false,\n        data: data.results,\n        pagination: {\n          ...params.pagination,\n          total: 200,\n          // 200 is mock data, you should read it from server\n          // total: data.totalCount,\n        },\n      });\n    });\n  };\n  useEffect(async ()=>{\n    await dispatch(getRest());\n    // test();\n  },[ restList.length ]);\n\n  /* 渲染餐馆名字 */\n  function renderNameOptions (){\n    return _.map(restList,(item)=>{\n      return (\n        <Option value={ item._id } key={ Math.random() }>{item.name['zh-CN']}</Option>\n      );\n    });\n  }\n  /* 选定餐馆 */\n  async function onChange (value) {\n    console.log(`selected ${value}`);\n    await dispatch(getMenu(value,1,10,''));\n  }\n\n  function onSearch (val) {\n    console.log('search:', val);\n  }\n\n  return (\n    <div>\n      <Select\n        showSearch\n        style={{ width : 200 }}\n        placeholder=\"Select a person\"\n        optionFilterProp=\"children\"\n        onChange={ onChange }\n        onSearch={ onSearch }\n        filterOption={ (input, option) =>{\n          return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        }\n        }\n      >\n        {renderNameOptions()}\n      </Select>\n      <Table columns={ columns }\n        dataSource={ foodList }\n        pagination={ pagination }\n        onChange={ handleTableChange }/>\n    </div>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}