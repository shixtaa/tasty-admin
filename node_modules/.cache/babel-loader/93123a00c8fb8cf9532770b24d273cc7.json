{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Order/Order.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\n/* style */\n\nimport './order.scss';\n/* antd */\n\nimport { DatePicker, Space } from 'antd';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\n/* lodash */\n\nimport _ from 'lodash';\n/* echarts */\n// 引入 ECharts 主模块\n\nimport echarts from 'echarts/lib/echarts'; // 引入环形图\n\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/chart/line'; // 引入提示框和标题组件\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title'; // import 'echarts/lib/component/visualMap';\n\n/* actions */\n\nimport { getOrder, clearOrder } from './state/reducer';\nimport { useDispatch } from 'react-redux';\n/* utils */\n\nimport { getStorage } from '../../../../Common/utils';\nimport { useHistory } from 'react-router-dom';\nconst {\n  RangePicker\n} = DatePicker;\nexport default function Order() {\n  _s();\n\n  const orderList = useSelector(state => state.order.list);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const quantityRef = useRef();\n  const peopleRef = useRef(); // const quantityLineRef=useRef()\n  // const quantityPieRef=useRef()\n\n  const [allDate, setAllDate] = useState([]);\n  /* eslint-disable */\n\n  useEffect(() => {\n    let user = getStorage('user');\n\n    if (user && user === 'visitor') {\n      history.push('/admin/restaurant');\n    }\n\n    dispatch(clearOrder()); // quantityLine()\n    // quantityPie()\n\n    renderQuantity();\n    renderPeople();\n  }, []);\n  useEffect(() => {\n    if (orderList.length > 0) {\n      // quantityLine()\n      // quantityPie()\n      renderQuantity();\n      renderPeople();\n    }\n  }, [orderList.length]);\n  /* 去重，计算数量 */\n\n  function handleData(array, params) {\n    let list = [];\n    console.log(array);\n\n    _.forIn(_.groupBy(array, params), (value, key) => {\n      let item = {\n        name: '',\n        count: 0\n      };\n      item.name = key.toString();\n      item.count = value.length;\n      list.push(item);\n    });\n\n    return list;\n  }\n  /* 订单量数据 */\n\n\n  function quantityData() {\n    let array = [];\n    /* 获取订单日期 */\n\n    _.map(orderList, item => {\n      array.push({\n        date: moment(item.createdAt).format('YYYY-MM-DD')\n      });\n    });\n    /* 将订单日期分组、去重 */\n\n\n    let list = handleData(array, 'date');\n\n    let test = _.map(list, item => {\n      return item.name;\n    });\n    /* 将list和所选日期范围内的所有日期进行比较，list中没有的添加到list中，count为0 */\n\n\n    _.map(allDate, item => {\n      if (_.indexOf(test, item) === -1) {\n        list.push({\n          name: item,\n          count: 0\n        });\n      }\n    });\n\n    let piedata = _.map(list, item => {\n      return {\n        name: item.name,\n        value: item.count\n      };\n    });\n    /* 排序 */\n\n\n    let data = _.orderBy(piedata, 'name', 'asc');\n\n    return data;\n  }\n  /* 订单量-折线图 */\n  // function quantityLine(){\n  //   let data=quantityData()\n  //   echarts.init(quantityLineRef.current).setOption({\n  //     title: {\n  //       text: '订单量',\n  //       textStyle: {\n  //         color: '#fff',\n  //         fontSize: 20,\n  //       },\n  //     },\n  //     legend:{\n  //       data:['订单量']\n  //     },\n  //     xAxis: {\n  //       // boundaryGap: false,\n  //       type: 'category',\n  //       // axisLabel:{interval:0},\n  //       // scale: true,\n  //       data: _.map(data,(item)=>{return item.name})\n  //     },\n  //     yAxis: {\n  //         type: 'value'\n  //     },\n  //     series: [\n  //       {\n  //         name: '订单量',\n  //         itemStyle : { normal: {label : {show: true}}},\n  //         type: 'line',\n  //         smooth: true,\n  //         data:_.map(data,(item)=>{return item.value})\n  //       }\n  //     ]\n  //   })\n  // }\n\n  /* 订单量-饼图 */\n  // function quantityPie(){\n  //   let data=quantityData()\n  //   echarts.init(quantityPieRef.current).setOption({\n  //   series: [\n  //     {\n  //       name: '订单量',\n  //       type: 'pie',\n  //       radius: '45%',\n  //       label: {\n  //         formatter: '{b}: {c} ({d}%)',\n  //         textStyle: {\n  //           color: '#fff',\n  //           fontSize: 12,\n  //         },\n  //       },\n  //       data: data\n  //     },\n  //   ]\n  //   })\n  // }\n\n  /* 订单量 */\n\n\n  function renderQuantity() {\n    let data = quantityData();\n    echarts.init(quantityRef.current).setOption({\n      title: {\n        text: '订单量',\n        textStyle: {\n          color: '#fff',\n          fontSize: 20\n        }\n      },\n      grid: {\n        left: '5%',\n        right: '50%'\n      },\n      xAxis: {\n        type: 'category',\n        data: _.map(data, item => {\n          return item.name;\n        })\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '订单量',\n        itemStyle: {\n          normal: {\n            label: {\n              show: true\n            }\n          }\n        },\n        type: 'line',\n        xAxisIndex: 0,\n        yAxisIndex: 0,\n        barMaxWidth: '600px',\n        smooth: true,\n        data: _.map(data, item => {\n          return item.value;\n        })\n      }, {\n        name: '订单量',\n        type: 'pie',\n        radius: '40%',\n        center: ['70%', '50%'],\n        label: {\n          formatter: '{b}: {c} ({d}%)',\n          textStyle: {\n            color: '#fff',\n            fontSize: 12\n          }\n        },\n        data: data\n      }]\n    });\n  }\n  /* 订单人群 */\n\n\n  function renderPeople() {\n    let array = [];\n\n    _.map(orderList, item => {\n      if (item.user) {\n        array.push(item.user);\n      } else {\n        array.push(' ');\n      }\n    });\n\n    let list = handleData(array, 'username');\n\n    var piedata = _.map(list, item => {\n      return {\n        name: item.name,\n        value: item.count\n      };\n    });\n\n    echarts.init(peopleRef.current).setOption({\n      title: {\n        text: '订单人群',\n        textStyle: {\n          color: '#fff',\n          fontSize: 20\n        }\n      },\n      series: [{\n        name: '订单人群',\n        type: 'pie',\n        radius: '55%',\n        label: {\n          formatter: '{b}: {c} ({d}%)',\n          textStyle: {\n            fontSize: 12\n          }\n        },\n        data: piedata\n      }]\n    });\n  }\n  /* 修改时间范围 */\n\n\n  async function changeData(date, dateString) {\n    let start = moment(date[0]._d).utc().toISOString();\n    let end = moment(date[1]._d).utc().toISOString();\n    let array = formatTime(start, end);\n    setAllDate(array);\n    await dispatch(getOrder(start, end));\n  }\n  /* 把选择的日期范围 全部罗列出来 */\n\n\n  function formatTime(start, end) {\n    var startTime = start;\n    var endTime = end;\n    var bd = new Date(startTime),\n        be = new Date(endTime);\n    var bdTime = bd.getTime(),\n        beTime = be.getTime(),\n        timeDiff = beTime - bdTime;\n    var dArr = [];\n\n    for (var i = 0; i <= timeDiff; i += 86400000) {\n      var ds = new Date(bdTime + i);\n      let mydate = ds.getDate();\n\n      if (ds.getDate() < 10) {\n        mydate = '0' + ds.getDate(); //补齐\n      }\n\n      dArr.push(ds.getFullYear() + '-' + (ds.getMonth() + 1) + '-' + mydate);\n    }\n\n    return dArr;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      size: 20,\n      children: /*#__PURE__*/_jsxDEV(RangePicker, {\n        style: {\n          width: '800px'\n        },\n        onChange: changeData\n        /* disabled={disable()} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-quantity\",\n        ref: quantityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-people\",\n        ref: peopleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Order, \"JzNTwCy2UAniOcsTHbvHTXSY5BI=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Order/Order.js"],"names":["React","useEffect","useRef","useState","DatePicker","Space","useSelector","moment","_","echarts","getOrder","clearOrder","useDispatch","getStorage","useHistory","RangePicker","Order","orderList","state","order","list","dispatch","history","quantityRef","peopleRef","allDate","setAllDate","user","push","renderQuantity","renderPeople","length","handleData","array","params","console","log","forIn","groupBy","value","key","item","name","count","toString","quantityData","map","date","createdAt","format","test","indexOf","piedata","data","orderBy","init","current","setOption","title","text","textStyle","color","fontSize","grid","left","right","xAxis","type","yAxis","series","itemStyle","normal","label","show","xAxisIndex","yAxisIndex","barMaxWidth","smooth","radius","center","formatter","changeData","dateString","start","_d","utc","toISOString","end","formatTime","startTime","endTime","bd","Date","be","bdTime","getTime","beTime","timeDiff","dArr","i","ds","mydate","getDate","getFullYear","getMonth","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n/* style */\nimport './order.scss'\n/* antd */\nimport { DatePicker, Space } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport moment from 'moment'\n/* lodash */\nimport _ from 'lodash'\n/* echarts */\n // 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入环形图\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/chart/line';\n\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n// import 'echarts/lib/component/visualMap';\n\n/* actions */\nimport {getOrder,clearOrder} from './state/reducer'\nimport { useDispatch } from 'react-redux';\n\n/* utils */\nimport {getStorage} from '../../../../Common/utils'\nimport { useHistory } from 'react-router-dom';\n\nconst { RangePicker } = DatePicker;\nexport default function Order () {\n  const orderList=useSelector(state=>state.order.list)\n  const dispatch=useDispatch()\n  const history=useHistory()\n  const quantityRef=useRef()\n  const peopleRef =useRef()\n  // const quantityLineRef=useRef()\n  // const quantityPieRef=useRef()\n  const [allDate,setAllDate]=useState([])\n  /* eslint-disable */\n  useEffect(()=>{\n    let user=getStorage('user')\n    if(user&&user==='visitor'){\n      history.push('/admin/restaurant')\n    }\n    dispatch(clearOrder())\n    // quantityLine()\n    // quantityPie()\n    renderQuantity()\n    renderPeople()\n  },[])\n  useEffect(()=>{\n    if(orderList.length>0){\n      // quantityLine()\n      // quantityPie()\n      renderQuantity()\n      renderPeople()\n    }\n  },[orderList.length])\n\n/* 去重，计算数量 */\nfunction handleData(array,params){\n  let list=[]\n  console.log(array)\n  _.forIn(_.groupBy(array,params),(value,key)=>{\n    let item = {\n      name:'',\n      count : 0\n    };\n    item.name = key.toString();\n    item.count = value.length;\n    list.push(item);\n  })\n    return list\n}\n\n  /* 订单量数据 */\nfunction quantityData(){\n  \n  let array = []\n  /* 获取订单日期 */\n  _.map(orderList,(item)=>{\n    array.push({date:moment(item.createdAt).format('YYYY-MM-DD')})\n  })\n  /* 将订单日期分组、去重 */\n  let list=handleData(array,'date')\n  let test=_.map(list,(item)=>{\n    return item.name\n  })\n  /* 将list和所选日期范围内的所有日期进行比较，list中没有的添加到list中，count为0 */\n  _.map(allDate,(item)=>{\n    if(_.indexOf(test,item)===-1){\n      list.push({name:item,count:0})\n    }\n  })\n  \n  let piedata = _.map(list,(item) => {\n    return {\n      name: item.name,   \n      value: item.count,\n    };\n  });\n  /* 排序 */\n  let data=_.orderBy(piedata,'name','asc')\n  return data\n}\n  /* 订单量-折线图 */\n// function quantityLine(){\n//   let data=quantityData()\n//   echarts.init(quantityLineRef.current).setOption({\n//     title: {\n//       text: '订单量',\n//       textStyle: {\n//         color: '#fff',\n//         fontSize: 20,\n//       },\n//     },\n//     legend:{\n//       data:['订单量']\n//     },\n//     xAxis: {\n//       // boundaryGap: false,\n//       type: 'category',\n//       // axisLabel:{interval:0},\n//       // scale: true,\n//       data: _.map(data,(item)=>{return item.name})\n\n//     },\n//     yAxis: {\n//         type: 'value'\n//     },\n//     series: [\n//       {\n//         name: '订单量',\n//         itemStyle : { normal: {label : {show: true}}},\n//         type: 'line',\n//         smooth: true,\n//         data:_.map(data,(item)=>{return item.value})\n//       }\n//     ]\n//   })\n// }\n  /* 订单量-饼图 */\n// function quantityPie(){\n//   let data=quantityData()\n//   echarts.init(quantityPieRef.current).setOption({\n//   series: [\n//     {\n//       name: '订单量',\n//       type: 'pie',\n//       radius: '45%',\n//       label: {\n//         formatter: '{b}: {c} ({d}%)',\n//         textStyle: {\n//           color: '#fff',\n//           fontSize: 12,\n//         },\n//       },\n//       data: data\n//     },\n//   ]\n//   })\n// }\n/* 订单量 */\nfunction renderQuantity(){\n  let data=quantityData()\n  echarts.init(quantityRef.current).setOption({\n    title: {\n      text: '订单量',\n      textStyle: {\n        color: '#fff',\n        fontSize: 20,\n      },\n    },\n    grid:{\n      left:'5%',\n      right:'50%'\n    },\n    xAxis: {\n      type: 'category',\n      data: _.map(data,(item)=>{return item.name})\n\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [\n      {\n        name: '订单量',\n        itemStyle : { normal: {label : {show: true}}},\n        type: 'line',\n        xAxisIndex: 0,\n        yAxisIndex: 0,\n        barMaxWidth:'600px',\n        smooth: true,\n        data:_.map(data,(item)=>{return item.value})\n      },\n      {\n        name: '订单量',\n        type: 'pie',\n        radius: '40%',\n        center:['70%', '50%'],\n        label: {\n          formatter: '{b}: {c} ({d}%)',\n          textStyle: {\n            color: '#fff',\n            fontSize: 12,\n          },\n        },\n        data: data\n      },\n    ]\n  })\n}\n  /* 订单人群 */\nfunction renderPeople(){\n  let array = []\n  _.map(orderList,(item)=>{\n    if(item.user){\n      array.push(item.user)\n    }\n    else{\n      array.push(' ')\n    }\n  })\n  let list=handleData(array,'username')\n  var piedata = _.map(list,(item) => {\n    return {\n      name: item.name,   \n      value: item.count,\n    };\n  });\n  echarts.init(peopleRef.current).setOption({\n    title: {\n      text: '订单人群',\n      textStyle: {\n        color: '#fff',\n        fontSize: 20,\n      },\n    },\n    series: [\n      {\n        name: '订单人群',\n        type: 'pie',\n        radius: '55%',\n        label: {\n          formatter: '{b}: {c} ({d}%)',\n          textStyle: {\n            fontSize: 12,\n          },\n        },\n        data: piedata\n      },]\n  })\n}\n/* 修改时间范围 */\nasync function changeData(date, dateString){\n  let start= moment(date[0]._d).utc().toISOString();\n  let end= moment(date[1]._d).utc().toISOString();\n  let array=formatTime(start,end)\n  setAllDate(array)\n  await dispatch(getOrder(start,end))\n}\n/* 把选择的日期范围 全部罗列出来 */\nfunction formatTime (start,end){\n  var startTime = start;\n  var endTime = end;\n  var bd = new Date(startTime),be = new Date(endTime);\n  var bdTime = bd.getTime(), beTime = be.getTime(),timeDiff = beTime - bdTime;\n  var dArr = [];\n  for(var i = 0; i <= timeDiff; i += 86400000){\n    var ds = new Date(bdTime + i);\n    let mydate = ds.getDate();\n    if(ds.getDate() < 10){\n      mydate = '0' + ds.getDate();  //补齐\n    }\n    dArr.push((ds.getFullYear()) + '-' + (ds.getMonth() + 1) + '-' + mydate);\n  }\n  return dArr;\n}\n  return (\n    <div>\n      <Space direction=\"vertical\" size={ 20 }>\n        <RangePicker style={{ width :'800px' }} onChange={changeData} /* disabled={disable()} *//>\n      </Space>\n      <div className='main'>\n        <div className='order-quantity' ref={quantityRef}>\n          {/* <div className='quantity-line' ref={quantityLineRef} ></div> */}\n          {/* <div className='quantity-pie'  ref={quantityPieRef}  ></div> */}\n        </div>\n        <div className='order-people' ref={peopleRef}></div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}