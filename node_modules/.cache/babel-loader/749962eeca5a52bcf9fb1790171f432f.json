{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\n\nimport { setEn, setZh } from '../state/reducer';\nimport { getTags } from '../../../State/action';\n/* lodash */\n\nimport _ from 'lodash';\nconst {\n  Option\n} = Select;\nexport default function ModalBox(info) {\n  _s();\n\n  const language = useSelector(state => state.language.lang);\n  const tags = useSelector(state => state.restaurant.tags); // console.log(info.perItem);\n\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(info.perItem.name[`${language}`]);\n  const inputRef = useRef();\n\n  async function changeLang(value) {\n    if (value == 'zh-CN') {\n      await dispatch(setZh());\n    } else {\n      await dispatch(setEn());\n    }\n\n    setInputValue(info.perItem.name[`${language}`]);\n  }\n\n  useEffect(async () => {\n    let result = await dispatch(getTags());\n    console.log(result);\n  }, []);\n  useEffect(async () => {\n    await setInputValue(info.perItem.name[`${language}`]);\n    inputRef.current.state.value = inputValue;\n  }, [language, inputValue, info.perItem]);\n\n  function renderTag() {\n    return _.map(tags, item => {\n      console.log(item);\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item,\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u9910\\u9986\\u540D\\u79F0\\uFF1A\",\n        children: /*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['name', 'province'],\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: 'Province is required'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: '80px'\n              },\n              defaultValue: language,\n              onChange: value => {\n                changeLang(value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"zh-CN\",\n                children: \"\\u4E2D\\u6587\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"en-US\",\n                children: \"\\u82F1\\u6587\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['address', 'street'],\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: 'Street is required'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                width: '50%'\n              },\n              placeholder: \"Input value\",\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u9910\\u9986\\u540D\\u79F0\\uFF1A\",\n        children: /*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['tags', 'province'],\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: 'Province is required'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: '100px'\n              },\n              defaultValue: tags[0],\n              children: renderTag()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalBox, \"b9geAZuo3SPdMN8QewsbdudmBh4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js"],"names":["React","useState","useEffect","useRef","Form","Input","Select","useDispatch","useSelector","setEn","setZh","getTags","_","Option","ModalBox","info","language","state","lang","tags","restaurant","dispatch","inputValue","setInputValue","perItem","name","inputRef","changeLang","value","result","console","log","current","renderTag","map","item","Math","random","required","message","width"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect, useRef } from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\nimport { setEn,setZh } from '../state/reducer';\nimport { getTags } from '../../../State/action';\n\n/* lodash */\nimport _ from 'lodash';\n\nconst { Option } = Select;\n\nexport default function ModalBox (info) {\n  const language = useSelector(state=>state.language.lang);\n  const tags = useSelector(state=>state.restaurant.tags);\n  // console.log(info.perItem);\n  const dispatch = useDispatch();\n  const [ inputValue,setInputValue ] = useState(info.perItem.name[`${language}`]);\n  const inputRef = useRef();\n\n  async function changeLang (value){\n    if(value == 'zh-CN'){\n      await dispatch(setZh());\n    }else{\n      await dispatch(setEn());\n    }\n    setInputValue(info.perItem.name[`${language}`]);\n  }\n\n  useEffect(async ()=>{\n    let result = await dispatch(getTags());\n    console.log(result);\n  },[]);\n\n  useEffect( async ()=>{\n\n    await setInputValue(info.perItem.name[`${language}`]);\n\n    inputRef.current.state.value = inputValue;\n\n  },[ language,inputValue,info.perItem ]);\n  function renderTag (){\n    return _.map(tags,(item)=>{\n      console.log(item);\n      return (\n        <Option value={ item } key={ Math.random() }>{item}</Option>\n      );\n    });\n  }\n  return (\n    <div>\n      <Form>\n        <Form.Item label=\"餐馆名称：\">\n          <Input.Group compact>\n            <Form.Item\n              name={ [ 'name', 'province' ] }\n              noStyle\n              rules={ [ { required: true, message: 'Province is required' } ] }\n            >\n              <Select style={{ width :'80px' }} defaultValue={ language } onChange={ (value)=>{changeLang(value); } }>\n                <Option value=\"zh-CN\" >中文</Option>\n                <Option value=\"en-US\" >英文</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name={ [ 'address', 'street' ] }\n              noStyle\n              rules={ [ { required: true, message: 'Street is required' } ] }\n            >\n              <Input style={{ width : '50%' }} placeholder=\"Input value\" ref={ inputRef }  />\n            </Form.Item>\n          </Input.Group>\n        </Form.Item>\n        <Form.Item label=\"餐馆名称：\">\n\n          <Input.Group compact>\n            <Form.Item\n              name={ [ 'tags', 'province' ] }\n              noStyle\n              rules={ [ { required: true, message: 'Province is required' } ] }\n            >\n              <Select style={{ width :'100px' }} defaultValue={ tags[0] }>\n                {renderTag()}\n              </Select>\n            </Form.Item>\n          </Input.Group>\n\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}