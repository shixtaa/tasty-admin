{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Menu/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n/* antd */\n\nimport { Select, Table, Switch, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons'; // import reqwest from 'reqwest';\n\nconst {\n  Option\n} = Select;\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRest } from '../../State/reducer';\nimport { getMenu } from './state/reducer';\n/* table 数据 */\n\nexport default function Menu() {\n  _s();\n\n  const restList = useSelector(state => state.restaurant.list);\n  const foodList = useSelector(state => state.menu.list);\n  const [pagination\n  /* ,setPagination */\n  ] = useState({\n    page: 1,\n    pageSize: 10\n  });\n  const dispatch = useDispatch(); // const [ searchText,setSearchText ] = useState('');\n  // const [ searchedColumn,setSearchedColumn ] = useState('');\n\n  let handleTableChange = (pagination, filters, sorter) => {\n    this.fetch({\n      sortField: sorter.field,\n      sortOrder: sorter.order,\n      pagination,\n      ...filters\n    });\n  };\n\n  useEffect(async () => {\n    await dispatch(getRest()); // test();\n  }, [restList.length]);\n  /* 渲染餐馆名字 */\n\n  function renderNameOptions() {\n    return _.map(restList, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item._id,\n        children: item.name['zh-CN']\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* 选定餐馆 */\n\n\n  async function onChange(value) {\n    console.log(`selected ${value}`);\n    await dispatch(getMenu(value, 1, 10, ''));\n  }\n\n  function onSearch(val) {\n    console.log('search:', val);\n  }\n\n  const columns = [{\n    title: '菜品',\n    dataIndex: 'name',\n    render: name => name['zh-CN'],\n    width: '40%',\n    ...getColumnSearchProps('name')\n  }, {\n    title: '价格',\n    dataIndex: 'price',\n    // sorter: true,\n    render: price => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" $\", (price / 100).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this),\n    width: '30%'\n  }, {\n    title: '状态',\n    key: 'available',\n    render: (text, record) => {\n      return /*#__PURE__*/_jsxDEV(Switch, {\n        checked: record.available\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    },\n    width: '30%'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      placeholder: \"Select a person\",\n      optionFilterProp: \"children\",\n      onChange: onChange,\n      onSearch: onSearch,\n      filterOption: (input, option) => {\n        return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n      },\n      children: renderNameOptions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: foodList,\n      pagination: pagination,\n      onChange: handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Menu, \"I9cbAqEskS2Wm2wI/N15lOFFc00=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Menu/Menu.js"],"names":["React","useEffect","useState","PropTypes","Select","Table","Switch","Input","Button","Space","Highlighter","SearchOutlined","Option","_","useSelector","useDispatch","getRest","getMenu","Menu","restList","state","restaurant","list","foodList","menu","pagination","page","pageSize","dispatch","handleTableChange","filters","sorter","fetch","sortField","field","sortOrder","order","length","renderNameOptions","map","item","_id","name","Math","random","onChange","value","console","log","onSearch","val","columns","title","dataIndex","render","width","getColumnSearchProps","price","toFixed","key","text","record","available","input","option","children","toLowerCase","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/* antd */\nimport { Select,Table,Switch ,Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\n// import reqwest from 'reqwest';\n\nconst { Option } = Select;\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRest } from '../../State/reducer';\nimport { getMenu } from './state/reducer';\n\n/* table 数据 */\n\nexport default function Menu () {\n  const restList = useSelector(state=>state.restaurant.list);\n  const foodList = useSelector(state=>state.menu.list);\n  const [ pagination/* ,setPagination */ ] = useState({\n    page: 1,\n    pageSize: 10,\n  });\n  const dispatch = useDispatch();\n  // const [ searchText,setSearchText ] = useState('');\n  // const [ searchedColumn,setSearchedColumn ] = useState('');\n\n  let handleTableChange = (pagination, filters, sorter) => {\n    this.fetch({\n      sortField: sorter.field,\n      sortOrder: sorter.order,\n      pagination,\n      ...filters,\n    });\n  };\n\n  useEffect(async ()=>{\n    await dispatch(getRest());\n    // test();\n  },[ restList.length ]);\n\n  /* 渲染餐馆名字 */\n  function renderNameOptions (){\n    return _.map(restList,(item)=>{\n      return (\n        <Option value={ item._id } key={ Math.random() }>{item.name['zh-CN']}</Option>\n      );\n    });\n  }\n  /* 选定餐馆 */\n  async function onChange (value) {\n    console.log(`selected ${value}`);\n    await dispatch(getMenu(value,1,10,''));\n  }\n\n  function onSearch (val) {\n    console.log('search:', val);\n  }\n  const columns = [\n    {\n      title: '菜品',\n      dataIndex: 'name',\n      render: name => name['zh-CN'],\n      width: '40%',\n      ...getColumnSearchProps('name'),\n    },\n    {\n      title: '价格',\n      dataIndex: 'price',\n      // sorter: true,\n      render: price => <span> ${(price / 100).toFixed(2)}</span>,\n      width: '30%',\n    },\n    {\n      title: '状态',\n      key: 'available',\n      render:(text,record)=> {\n        return (\n          <Switch checked={ record.available }/>\n        );\n      },\n      width: '30%',\n\n    },\n  ];\n  return (\n    <div>\n      <Select\n        showSearch\n        style={{ width : 200 }}\n        placeholder=\"Select a person\"\n        optionFilterProp=\"children\"\n        onChange={ onChange }\n        onSearch={ onSearch }\n        filterOption={ (input, option) =>{\n          return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        }\n        }\n      >\n        {renderNameOptions()}\n      </Select>\n      <Table columns={ columns }\n        dataSource={ foodList }\n        pagination={ pagination }\n        onChange={ handleTableChange }/>\n    </div>\n  );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}