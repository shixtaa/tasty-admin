{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './login.scss';\n/* antd */\n\nimport { Form, Input, Button } from 'antd';\n/* actions */\n\nimport { postLogin } from './state/reducer';\nimport { useDispatch } from 'react-redux';\n/* utils */\n\nimport { setStorage } from '../../Common/utils';\nimport { useHistory } from 'react-router-dom';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport default function Login() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch(); // const onFinish = values => {\n  //   console.log('Success:', values);\n  // };\n  // const onFinishFailed = errorInfo => {\n  //   console.log('Failed:', errorInfo);\n  // };\n\n  async function loginClick() {\n    console.log(username);\n    let data = {\n      username: 'admin',\n      password: '123456'\n    };\n    let result = await dispatch(postLogin(data));\n    setStorage('user', result.role);\n    history.push('/admin/restaurant');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    } // onFinish={onFinish}\n    // onFinishFailed={onFinishFailed}\n    ,\n    style: {\n      margin: '300px auto',\n      width: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: loginClick,\n        children: \"\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"d65AGzsN3E1xqTvZhfwNvRRQqF4=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Login/Login.js"],"names":["React","useState","Form","Input","Button","postLogin","useDispatch","setStorage","useHistory","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","username","setUsername","password","setPassword","history","dispatch","loginClick","console","log","data","result","role","push","remember","margin","width","required","message","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './login.scss'\n/* antd */\n\nimport { Form, Input, Button } from 'antd';\n\n/* actions */\nimport {postLogin} from './state/reducer'\nimport { useDispatch } from 'react-redux';\n\n/* utils */\nimport {setStorage} from '../../Common/utils'\nimport { useHistory } from 'react-router-dom';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nexport default function Login() {\n  const [username,setUsername]=useState('')\n  const [password,setPassword]=useState('')\n  const history=useHistory()\n\nconst dispatch=useDispatch()\n  // const onFinish = values => {\n  //   console.log('Success:', values);\n  // };\n\n  // const onFinishFailed = errorInfo => {\n  //   console.log('Failed:', errorInfo);\n  // };\n\n  async function loginClick(){\n    console.log(username)\n    let data={\n      username:'admin',\n      password:'123456'\n    }\n    let result=await dispatch(postLogin(data))\n    setStorage('user',result.role)\n    history.push('/admin/restaurant')\n  }\n  return(\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      // onFinish={onFinish}\n      // onFinishFailed={onFinishFailed}\n      style={{margin:'300px auto',width:'500px',}}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input value={username} onChange={(e)=>{setUsername(e.target.value)}}/>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password value={password} onChange={(e)=>{setPassword(e.target.value)}}/>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" onClick={loginClick}>\n          登录\n        </Button>\n      </Form.Item>\n    </Form>\n      );\n}\n"]},"metadata":{},"sourceType":"module"}