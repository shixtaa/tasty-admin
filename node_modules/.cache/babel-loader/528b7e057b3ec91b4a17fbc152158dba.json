{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Select, Tag, TimePicker, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\n\nimport { setEn, setZh } from '../state/reducer';\n/* lodash */\n\nimport _ from 'lodash';\n/* moment */\n\nimport moment from 'moment-timezone';\nmoment.locale('zh-cn', {\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_')\n});\nconst {\n  Option\n} = Select;\nexport default function ModalBox() {\n  _s();\n\n  const language = useSelector(state => state.language.lang);\n  const tags = useSelector(state => state.restaurant.tags);\n  const selectedList = useSelector(state => state.restaurant.selectedItem);\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(selectedList.newName);\n  const [time, setTime] = useState(new Date());\n  const [tagList, setTagList] = useState([]);\n  const [hour, setHour] = useState(info => {\n    return [moment(formatTime(info[0]), 'HH:mm:ss'), moment(formatTime(info[1]), 'HH:mm:ss')];\n  });\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n  const {\n    RangePicker\n  } = TimePicker;\n  /* 纽约时间 */\n\n  const inputRef = useRef(); // const pickerRef = useRef();\n\n  /* 改变语言 */\n\n  async function changeLang(value) {\n    if (value == 'zh-CN') {\n      await dispatch(setZh());\n    } else {\n      await dispatch(setEn());\n    }\n\n    setInputValue(selectedList.name[`${language}`]);\n  }\n\n  useEffect(() => {\n    setTagList(selectedList.tags);\n  }, [selectedList.tags]);\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n  useEffect(async () => {\n    await setInputValue(selectedList.name[`${language}`]);\n    inputRef.current.state.value = inputValue;\n  }, [language, inputValue]); // useEffect(()=>{\n  //   pickerRef.current.props.value=;\n  // },[]);\n\n  /* 渲染所有的tags列表 */\n\n  function renderTagList() {\n    return _.map(tags, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item,\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* 增加tags */\n\n\n  function changeTag(value) {\n    let cloneList = _.cloneDeep(tagList);\n\n    if (_.indexOf(cloneList, value) == -1) {\n      cloneList.push(value);\n    }\n\n    setTagList(cloneList);\n  }\n  /*删除tags */\n\n\n  function close(index) {\n    let cloneList = _.cloneDeep(tagList);\n\n    cloneList.splice(index, 1);\n    setTagList(cloneList);\n  }\n  /* 渲染餐馆的tags */\n\n\n  function renderTags() {\n    return tagList.map((tag, index) => {\n      let color = tag.length > 5 ? 'geekblue' : 'green';\n\n      if (tag === 'loser') {\n        color = 'volcano';\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        closable: true,\n        onClose: () => {\n          close(index);\n        },\n        style: {\n          marginRight: '10px'\n        },\n        children: tag.toUpperCase()\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  function formatTime(value) {\n    return `${value / 60}:${value % 60}:00`;\n  }\n\n  function gethour(info) {\n    let hourList = [// moment(info ? formatTime(info[0]) : '00:00:00','HH:mm:ss'),\n    // moment(info ? formatTime(info[1]) : '00:00:00','HH:mm:ss')\n    moment(formatTime(info[0]), 'HH:mm:ss'), moment(formatTime(info[1]), 'HH:mm:ss')];\n    return hourList;\n  }\n  /* 修改时间 */\n\n\n  function changeHour(time) {\n    // return gethour(timeString);\n    // console.log(pickerRef.current.props.value);\n    console.log('time==>', time); // pickerRef.current.props.value = time;\n  }\n  /* 时间选择 */\n\n\n  function renderTimeList() {\n    let array = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天']; // function formatTime (value){\n    //   return `${value / 60}:${value % 60}:00`;\n    // }\n    // function gethour (info){\n    //   let hourList = [\n    //     moment(info ? formatTime(info.start) : '00:00:00','HH:mm:ss'),\n    //     moment(info ? formatTime(info.end) : '00:00:00','HH:mm:ss')\n    //   ];\n    //   return hourList;\n    // }\n\n    return _.map(array, (item, index) => {\n      let hourInfo = selectedList.hours[index];\n      let timeString = hourInfo ? [hourInfo.start, hourInfo.end] : ['00:00:00', '00:00:00'];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: true,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n          value: gethour(timeString),\n          onChange: changeHour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u9910\\u9986\\u540D\\u79F0\\uFF1A\",\n        children: /*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['name', 'province'],\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: 'Province is required'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: '80px'\n              },\n              defaultValue: language,\n              onChange: value => {\n                changeLang(value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"zh-CN\",\n                children: \"\\u4E2D\\u6587\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"en-US\",\n                children: \"\\u82F1\\u6587\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: ['address', 'street'],\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: 'Street is required'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              style: {\n                width: '50%'\n              },\n              placeholder: \"Input value\",\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u9910\\u9986\\u6807\\u7B7E\\uFF1A\",\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: '120px',\n              margin: '0 10px 6px 0'\n            },\n            defaultValue: tags[0],\n            onChange: value => {\n              changeTag(value);\n            },\n            children: renderTagList()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), renderTags()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u5F00\\u95E8\\u65F6\\u95F4\\uFF1A\",\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u7EBD\\u7EA6\\u5F53\\u5730\\u65F6\\u95F4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: newYork\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), renderTimeList()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalBox, \"3C+GkF/lmkPnPBWPy/SSfpyzMok=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js"],"names":["React","useState","useEffect","useRef","Form","Input","Select","Tag","TimePicker","Button","useDispatch","useSelector","setEn","setZh","_","moment","locale","weekdays","split","Option","ModalBox","language","state","lang","tags","restaurant","selectedList","selectedItem","dispatch","inputValue","setInputValue","newName","time","setTime","Date","tagList","setTagList","hour","setHour","info","formatTime","newYork","tz","format","RangePicker","inputRef","changeLang","value","name","timer","setInterval","clearInterval","current","renderTagList","map","item","Math","random","changeTag","cloneList","cloneDeep","indexOf","push","close","index","splice","renderTags","tag","color","length","marginRight","toUpperCase","gethour","hourList","changeHour","console","log","renderTimeList","array","hourInfo","hours","timeString","start","end","required","message","width","margin"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect, useRef } from 'react';\nimport { Form, Input, Select ,Tag ,TimePicker ,Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\nimport { setEn,setZh } from '../state/reducer';\n\n/* lodash */\nimport _ from 'lodash';\n\n/* moment */\nimport moment from 'moment-timezone';\nmoment.locale('zh-cn',{ weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), });\n\nconst { Option } = Select;\n\nexport default function ModalBox () {\n  const language = useSelector(state=>state.language.lang);\n  const tags = useSelector(state=>state.restaurant.tags);\n  const selectedList = useSelector(state=>state.restaurant.selectedItem);\n\n  const dispatch = useDispatch();\n\n  const [ inputValue,setInputValue ] = useState(selectedList.newName);\n  const [ time,setTime ] = useState(new Date());\n  const [ tagList,setTagList ] = useState([]);\n  const [ hour,setHour ] = useState((info)=>{\n    return [\n      moment( formatTime(info[0]),'HH:mm:ss'),\n      moment( formatTime(info[1]),'HH:mm:ss')\n    ];\n  });\n\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n  const { RangePicker } = TimePicker;\n\n  /* 纽约时间 */\n  const inputRef = useRef();\n  // const pickerRef = useRef();\n\n  /* 改变语言 */\n  async function changeLang (value){\n    if(value == 'zh-CN'){\n      await dispatch(setZh());\n    }else{\n      await dispatch(setEn());\n    }\n    setInputValue(selectedList.name[`${language}`]);\n  }\n\n  useEffect(()=>{\n    setTagList(selectedList.tags);\n  },[ selectedList.tags ]);\n\n  useEffect(()=>{\n    let timer = setInterval(()=>{\n      setTime(new Date());\n    },1000);\n    return ()=>{\n      if (timer){\n        clearInterval(timer);\n      }\n    };\n  },[]);\n\n  useEffect( async ()=>{\n\n    await setInputValue(selectedList.name[`${language}`]);\n\n    inputRef.current.state.value = inputValue;\n\n  },[ language,inputValue ]);\n\n  // useEffect(()=>{\n  //   pickerRef.current.props.value=;\n  // },[]);\n\n  /* 渲染所有的tags列表 */\n  function renderTagList (){\n    return _.map(tags,(item)=>{\n      return (\n        <Option value={ item } key={ Math.random() }>{item}</Option>\n      );\n    });\n  }\n  /* 增加tags */\n  function changeTag (value){\n    let cloneList = _.cloneDeep(tagList);\n    if(_.indexOf(cloneList,value) == -1){\n      cloneList.push(value);\n    }\n    setTagList(cloneList);\n  }\n  /*删除tags */\n  function close (index){\n    let cloneList = _.cloneDeep(tagList);\n    cloneList.splice(index,1);\n    setTagList(cloneList);\n  }\n\n  /* 渲染餐馆的tags */\n  function renderTags (){\n    return tagList.map((tag,index) => {\n      let color = tag.length > 5 ? 'geekblue' : 'green';\n      if (tag === 'loser') {\n        color = 'volcano';\n      }\n      return (\n        <Tag color={ color } key={ Math.random() } closable onClose={ ()=>{close(index);} } style={{ marginRight :'10px' }}>\n          {tag.toUpperCase()}\n        </Tag>\n      );\n    });}\n  function formatTime (value){\n    return `${value / 60}:${value % 60}:00`;\n  }\n  function gethour (info){\n    let hourList = [\n      // moment(info ? formatTime(info[0]) : '00:00:00','HH:mm:ss'),\n      // moment(info ? formatTime(info[1]) : '00:00:00','HH:mm:ss')\n      moment( formatTime(info[0]),'HH:mm:ss'),\n      moment( formatTime(info[1]),'HH:mm:ss')\n    ];\n    return hourList;\n  }\n  /* 修改时间 */\n  function changeHour (time){\n    // return gethour(timeString);\n    // console.log(pickerRef.current.props.value);\n    console.log('time==>',time);\n    // pickerRef.current.props.value = time;\n  }\n  /* 时间选择 */\n  function renderTimeList (){\n    let array = [ '星期一','星期二','星期三','星期四','星期五','星期六','星期天' ];\n    // function formatTime (value){\n    //   return `${value / 60}:${value % 60}:00`;\n    // }\n    // function gethour (info){\n    //   let hourList = [\n    //     moment(info ? formatTime(info.start) : '00:00:00','HH:mm:ss'),\n    //     moment(info ? formatTime(info.end) : '00:00:00','HH:mm:ss')\n    //   ];\n    //   return hourList;\n    // }\n    return _.map(array,(item,index)=>{\n      let hourInfo = selectedList.hours[index];\n      let timeString = hourInfo ? [ hourInfo.start,hourInfo.end ] : [ '00:00:00','00:00:00' ];\n      return (\n        <div key={ item }>\n          <Button type=\"primary\" disabled>\n            {item}\n          </Button>\n          {/* {hourInfo ?\n            <RangePicker format='HH:mm:ss' value={ [ moment( formatTime(hourInfo.start),'HH:mm:ss'),moment(formatTime(hourInfo.end),'HH:mm:ss') ] } onChange={ changeHour }></RangePicker> :\n            <RangePicker value={ [ moment('00:00:00', 'HH:mm:ss'),moment('00:00:00', 'HH:mm:ss') ] }></RangePicker>} */}\n          <RangePicker value={ gethour(timeString) } onChange={ changeHour }></RangePicker>\n        </div>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <Form >\n        <Form.Item label=\"餐馆名称：\">\n          <Input.Group compact>\n            <Form.Item\n              name={ [ 'name', 'province' ] }\n              noStyle\n              rules={ [ { required: true, message: 'Province is required' } ] }\n            >\n              <Select style={{ width :'80px' }} defaultValue={ language } onChange={ (value)=>{changeLang(value); } }>\n                <Option value=\"zh-CN\" >中文</Option>\n                <Option value=\"en-US\" >英文</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name={ [ 'address', 'street' ] }\n              noStyle\n              rules={ [ { required: true, message: 'Street is required' } ] }\n            >\n              <Input style={{ width : '50%' }} placeholder=\"Input value\" ref={ inputRef }  />\n            </Form.Item>\n          </Input.Group>\n        </Form.Item>\n        <Form.Item label=\"餐馆标签：\">\n          <Form.Item>\n            <Select style={{ width :'120px',margin :'0 10px 6px 0' }} defaultValue={ tags[0] } onChange={ (value)=>{changeTag(value);} }>\n              {renderTagList()}\n            </Select>\n            {renderTags()}\n          </Form.Item>\n        </Form.Item>\n        <Form.Item label=\"开门时间：\">\n          <Form.Item>\n            <h3>纽约当地时间</h3>\n            <h1 >{newYork}</h1>\n            {renderTimeList()}\n          </Form.Item>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}