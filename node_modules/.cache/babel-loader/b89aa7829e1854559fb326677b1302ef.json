{"ast":null,"code":"import { restaurant } from '../../../Request/restaurant';\nimport { tags } from '../../../Request/tags';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { message } from 'antd';\nimport { showLoading, hideLoading } from '../../../Redux/Reducer/loading';\nexport const restSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    list: [],\n    tags: [],\n    selectedItem: [],\n    isShow: false\n  },\n  reducers: {\n    saveData: (state, action) => {\n      state.list = action.payload;\n    },\n    saveTags: (state, action) => {\n      state.tags = action.payload;\n    },\n    selectedList: (state, action) => {\n      state.selectedItem = action.payload;\n    },\n    showModal: state => {\n      state.isShow = true;\n    },\n    hideModal: state => {\n      state.isShow = false;\n    }\n  }\n});\nexport const {\n  saveData,\n  saveTags,\n  selectedList,\n  showModal,\n  hideModal\n} = restSlice.actions;\nexport const getRest = () => async dispatch => {\n  try {\n    dispatch(showLoading());\n    let result = await restaurant();\n    dispatch(saveData(result.list));\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  } finally {\n    dispatch(hideLoading());\n  }\n};\nexport const getTags = () => async dispatch => {\n  try {\n    dispatch(showLoading());\n    let result = await tags();\n    dispatch(saveTags(result.list));\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  } finally {\n    dispatch(hideLoading());\n  }\n};\nexport const saveItem = value => async dispatch => {\n  try {\n    dispatch(showLoading());\n    let result = dispatch(selectedList(value));\n    console.log(result);\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  } finally {\n    dispatch(hideLoading());\n  }\n};\nexport default restSlice.reducer;","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/State/reducer.js"],"names":["restaurant","tags","createSlice","message","showLoading","hideLoading","restSlice","name","initialState","list","selectedItem","isShow","reducers","saveData","state","action","payload","saveTags","selectedList","showModal","hideModal","actions","getRest","dispatch","result","error","getTags","saveItem","value","console","log","reducer"],"mappings":"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","sourcesContent":["import { restaurant } from '../../../Request/restaurant';\nimport { tags } from '../../../Request/tags';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { message } from 'antd';\nimport { showLoading,hideLoading } from '../../../Redux/Reducer/loading';\nexport const restSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    list: [],\n    tags:[],\n    selectedItem:[],\n    isShow:false\n  },\n  reducers: {\n    saveData: (state, action) => {\n      state.list = action.payload;\n    },\n    saveTags: (state, action) => {\n      state.tags = action.payload;\n    },\n    selectedList:(state, action) => {\n      state.selectedItem = action.payload;\n    },\n    showModal:(state)=>{\n      state.isShow = true;\n    },\n    hideModal:(state)=>{\n      state.isShow = false;\n    }\n  },\n});\n\nexport const { saveData ,saveTags,selectedList ,showModal,hideModal } = restSlice.actions;\n\nexport const getRest = () => async (dispatch )=> {\n  try {\n    dispatch(showLoading());\n    let result = await restaurant();\n    dispatch(saveData(result.list));\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  }finally{\n    dispatch(hideLoading());\n  }\n};\n\nexport const getTags = () => async (dispatch )=> {\n  try {\n    dispatch(showLoading());\n    let result = await tags();\n    dispatch(saveTags(result.list));\n    return result;\n  } catch (error) {\n    message.error(error.message);\n\n  }finally{\n    dispatch(hideLoading());\n  }\n};\n\nexport const saveItem = (value) => async (dispatch )=> {\n  try {\n    dispatch(showLoading());\n    let result = dispatch(selectedList(value));\n    console.log(result)\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  }finally{\n    dispatch(hideLoading());\n  }\n};\n\nexport default restSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}