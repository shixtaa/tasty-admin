{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\n\nimport { setEn, setZh, updateRest } from '../state/reducer';\nimport { hideModal } from '../../Admin/State/reducer';\n/* lodash */\n\nimport _ from 'lodash';\n/* moment */\n\nimport moment from 'moment-timezone';\n/* antd */\n\nimport { Modal, Form, Input, Select, Tag, TimePicker, Button } from 'antd';\nmoment.locale('zh-cn', {\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_')\n});\nconst {\n  Option\n} = Select;\nconst {\n  RangePicker\n} = TimePicker; // import { renderOption } from '../../../../../Common/utils';\n\nexport default function ModalBox() {\n  _s();\n\n  const language = useSelector(state => state.language.lang);\n  const tags = useSelector(state => state.restaurant.tags);\n  const selectedList = useSelector(state => state.restaurant.selectedItem);\n  const isShow = useSelector(state => state.restaurant.isShow);\n  const [time, setTime] = useState(new Date());\n  const [afterUpdatedRestaurant, setAfterUpdatedRestaurant] = useState('');\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  useEffect(() => {\n    setAfterUpdatedRestaurant(selectedList);\n  }, [selectedList]);\n  /* 纽约时间 */\n\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n  /* 确认 */\n\n  async function handleOk() {\n    /* 更新信息 */\n    let data = {\n      id: selectedList._id,\n      data: { ..._.omit(afterUpdatedRestaurant, '_id')\n      }\n    };\n    await dispatch(updateRest(data));\n    /* 隐藏modal */\n\n    handleCancel();\n  }\n  /* 取消modal */\n\n\n  function handleCancel() {\n    dispatch(hideModal());\n  }\n  /* 改变语言 */\n\n\n  async function changeLang(value) {\n    if (value === 'zh-CN') {\n      await dispatch(setZh());\n    } else {\n      await dispatch(setEn());\n    } // setInputValue(selectedList.name[`${value}`])\n\n  }\n  /* 每秒循环时间 */\n\n\n  useEffect(() => {// let timer = setInterval(()=>{\n    //   setTime(new Date());\n    // },1000);\n    // return ()=>{\n    //   if (timer){\n    //     clearInterval(timer);\n    //   }\n    // };\n  }, []);\n  /* eslint-disable */\n\n  useEffect(() => {\n    // console.log(_.get(afterUpdatedRestaurant,`name[${language}]`))\n    inputRef.current.props.value = _.get(afterUpdatedRestaurant.name, `[${language}]`);\n  }, [language, afterUpdatedRestaurant]);\n  /* 渲染所有的tags列表 */\n\n  function renderTagList() {\n    return _.map(tags, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item,\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* 增加tags */\n\n\n  function addTag(value) {\n    let tagList = _.cloneDeep(_.get(afterUpdatedRestaurant, 'tags'));\n\n    if (_.indexOf(tagList, value) === -1) {\n      tagList.push(value);\n    }\n\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      tags: tagList\n    });\n  }\n  /*删除tags */\n\n\n  function removeTag(index) {\n    let tagList = _.cloneDeep(_.get(afterUpdatedRestaurant, 'tags')); // console.log(tagList)\n\n\n    tagList.splice(index, 1);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      tags: tagList\n    });\n  }\n  /* 渲染餐馆的tags */\n\n\n  function renderTags() {\n    if (afterUpdatedRestaurant.tags) {\n      return _.map(afterUpdatedRestaurant.tags, (tag, index) => {\n        let color = tag.length > 5 ? 'geekblue' : 'green';\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          closable: true,\n          onClose: () => {\n            removeTag(index);\n          },\n          style: {\n            marginRight: '10px'\n          },\n          children: tag.toUpperCase()\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this);\n      });\n    }\n  }\n  /* 修改菜名input */\n\n\n  function changeInput(e) {\n    let name = e.target.value; // if(inputValue !== name){\n\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      name: { ...afterUpdatedRestaurant.name,\n        [`${language}`]: name\n      }\n    }); // }\n  }\n  /* 修改时间 */\n\n\n  function changeHour(time, timeString, index) {\n    let startarr = timeString[0].split(':');\n    let endarr = timeString[1].split(':');\n    let start = parseInt(startarr[0]) * 60 + parseInt(startarr[1]);\n    let end = parseInt(endarr[0]) * 60 + parseInt(endarr[1]);\n\n    let hour = _.cloneDeep(afterUpdatedRestaurant.hours);\n\n    hour[index].start = start;\n    hour[index].end = end;\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      hours: hour\n    });\n  }\n  /* 获取一段范围内的所有数值 */\n\n\n  function range(start, end) {\n    const result = [];\n\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  }\n  /* 时间选择 */\n\n\n  function renderTimeList() {\n    let array = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];\n    return _.map(array, (item, index) => {\n      if (afterUpdatedRestaurant.hours) {\n        let hourInfo = afterUpdatedRestaurant.hours[index];\n        let result = hourInfo ? [moment().startOf('day').add(hourInfo.start, 'minutes'), moment().startOf('day').add(hourInfo.end, 'minutes')] : ['00:00:00', '00:00:00'];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            disabled: true,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n            disabledSeconds: () => range(0, 60),\n            defaultValue: result,\n            onChange: (time, timeString) => {\n              changeHour(time, timeString, index);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, afterUpdatedRestaurant._id + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: _.get(selectedList, `name[${language}]`),\n      visible: isShow,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u540D\\u79F0\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Input.Group, {\n            compact: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['name', 'province'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Province is required'\n              }],\n              initialValue: language,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                style: {\n                  width: '80px'\n                },\n                onChange: value => {\n                  changeLang(value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"zh-CN\",\n                  children: \"\\u4E2D\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"en-US\",\n                  children: \"\\u82F1\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['address', 'street'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: \"Restaurant's name is required\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  width: '50%'\n                },\n                placeholder: \"Input value\",\n                ref: inputRef,\n                value: _.get(afterUpdatedRestaurant, `name[${language}]`),\n                onBlur: e => {\n                  changeInput(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u6807\\u7B7E\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: '120px',\n                margin: '0 10px 6px 0'\n              },\n              defaultValue: tags[0],\n              onChange: value => {\n                addTag(value);\n              },\n              children: renderTagList()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), renderTags()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u5F00\\u95E8\\u65F6\\u95F4\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u7EBD\\u7EA6\\u5F53\\u5730\\u65F6\\u95F4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: newYork\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), renderTimeList()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n} // export default React.memo(ModalBox,(preProps,nextProps)=>{\n//   // console.log(pre.name);\n//   // console.log(next.name);\n//   return true;\n// });\n\n_s(ModalBox, \"i+Doo2XaNL8RDY68lYxFxrjskLM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Restaurant/Component/ModalBox.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","setEn","setZh","updateRest","hideModal","_","moment","Modal","Form","Input","Select","Tag","TimePicker","Button","locale","weekdays","split","Option","RangePicker","ModalBox","language","state","lang","tags","restaurant","selectedList","selectedItem","isShow","time","setTime","Date","afterUpdatedRestaurant","setAfterUpdatedRestaurant","dispatch","inputRef","newYork","tz","format","handleOk","data","id","_id","omit","handleCancel","changeLang","value","current","props","get","name","renderTagList","map","item","Math","random","addTag","tagList","cloneDeep","indexOf","push","removeTag","index","splice","renderTags","tag","color","length","marginRight","toUpperCase","changeInput","e","target","changeHour","timeString","startarr","endarr","start","parseInt","end","hour","hours","range","result","i","renderTimeList","array","hourInfo","startOf","add","required","message","width","margin"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect, useRef } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\nimport { setEn,setZh ,updateRest } from '../state/reducer';\nimport { hideModal } from '../../Admin/State/reducer';\n\n\n/* lodash */\nimport _ from 'lodash';\n\n/* moment */\nimport moment from 'moment-timezone';\n\n/* antd */\nimport { Modal,Form, Input, Select ,Tag ,TimePicker ,Button } from 'antd';\n\nmoment.locale('zh-cn',{ weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), });\nconst { Option } = Select;\nconst { RangePicker } = TimePicker;\n// import { renderOption } from '../../../../../Common/utils';\n\nexport default function ModalBox () {\n  const language = useSelector(state=>state.language.lang);\n  const tags = useSelector(state=>state.restaurant.tags);\n  const selectedList = useSelector(state=>state.restaurant.selectedItem);\n  const isShow = useSelector(state=>state.restaurant.isShow);\n  const [ time,setTime ] = useState(new Date());\n  const [ afterUpdatedRestaurant,setAfterUpdatedRestaurant ] = useState('');\n\n  const dispatch = useDispatch();\n\n  const inputRef = useRef();\n\n  useEffect(()=>{\n    setAfterUpdatedRestaurant(selectedList)\n  },[selectedList])\n  \n  /* 纽约时间 */\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n\n  /* 确认 */\n  async function handleOk (){\n    /* 更新信息 */\n    let data = {\n      id:selectedList._id,\n      data:{\n        ..._.omit(afterUpdatedRestaurant,'_id')\n      }\n    };\n    await dispatch(updateRest(data));\n    /* 隐藏modal */\n    handleCancel();\n  }\n\n  /* 取消modal */\n  function handleCancel () {\n    dispatch(hideModal());\n  }\n\n  /* 改变语言 */\n  async function changeLang (value){\n    if(value === 'zh-CN'){\n      await dispatch(setZh());\n    }else{\n      await dispatch(setEn());\n    }\n    // setInputValue(selectedList.name[`${value}`])\n  }\n\n  /* 每秒循环时间 */\n  useEffect(()=>{\n    // let timer = setInterval(()=>{\n    //   setTime(new Date());\n    // },1000);\n    // return ()=>{\n    //   if (timer){\n    //     clearInterval(timer);\n    //   }\n    // };\n  },[]);\n/* eslint-disable */\n  useEffect(  ()=>{\n    // console.log(_.get(afterUpdatedRestaurant,`name[${language}]`))\n    inputRef.current.props.value =_.get(afterUpdatedRestaurant.name,`[${language}]`) ;\n  },[ language,afterUpdatedRestaurant ]);\n\n  /* 渲染所有的tags列表 */\n  function renderTagList (){\n    return _.map(tags,(item)=>{\n      return (\n        <Option value={ item } key={ Math.random() }>{item}</Option>\n      );\n    });\n  }\n  /* 增加tags */\n  function addTag (value){\n    let tagList=_.cloneDeep(_.get(afterUpdatedRestaurant,'tags'))\n    if(_.indexOf(tagList,value) === -1){\n      tagList.push(value);\n      }\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,tags:tagList });\n  }\n\n  /*删除tags */\n  function removeTag (index){\n    let tagList=_.cloneDeep(_.get(afterUpdatedRestaurant,'tags'))\n\n    // console.log(tagList)\n    tagList.splice(index,1);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,tags:tagList });\n  }\n\n  /* 渲染餐馆的tags */\n  function renderTags (){\n    if(afterUpdatedRestaurant.tags){\n      return _.map(afterUpdatedRestaurant.tags,(tag,index) => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          return (\n            <Tag color={ color } key={ Math.random() } closable onClose={ ()=>{removeTag(index);} } style={{ marginRight :'10px' }}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        });\n    }\n  }\n\n  /* 修改菜名input */\n  function changeInput (e){\n    let name = e.target.value;\n    // if(inputValue !== name){\n      setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,name:{ ...afterUpdatedRestaurant.name,[`${language}`]:name } });\n    // }\n  }\n  /* 修改时间 */\n  function changeHour (time,timeString,index){\n    let startarr = timeString[0].split(':');\n    let endarr = timeString[1].split(':');\n    let start = parseInt(startarr[0]) * 60 + parseInt(startarr[1]);\n    let end = parseInt(endarr[0]) * 60 + parseInt(endarr[1]);\n    let hour=_.cloneDeep(afterUpdatedRestaurant.hours)\n    hour[index].start = start\n    hour[index].end = end;\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,hours:hour });\n  }\n  /* 获取一段范围内的所有数值 */\n  function range(start, end) {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n  /* 时间选择 */\n  function renderTimeList (){\n    let array = [ '星期一','星期二','星期三','星期四','星期五','星期六','星期天' ];\n    return _.map(array, (item,index)=>{\n      if(afterUpdatedRestaurant.hours){\n        let hourInfo = afterUpdatedRestaurant.hours[index];\n        let result = hourInfo ? [ moment().startOf('day').add(hourInfo.start,'minutes'),moment().startOf('day').add(hourInfo.end,'minutes')] : [ '00:00:00','00:00:00' ];\n        return (\n          <div key={ afterUpdatedRestaurant._id + index }>\n            <Button type=\"primary\" disabled>\n              {item}\n            </Button>\n            <RangePicker disabledSeconds={()=> range(0, 60)} defaultValue={result} onChange={(time,timeString)=>{changeHour(time,timeString,index)}}></RangePicker>\n          </div>\n        );\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Modal\n        title={ _.get(selectedList,`name[${language}]`) }\n        visible={ isShow }\n        onOk={ handleOk }\n        onCancel={ handleCancel }\n      >\n        <Form >\n          <Form.Item label=\"餐馆名称：\">\n            <Input.Group compact>\n              <Form.Item\n                name={ [ 'name', 'province' ] }\n                noStyle\n                rules={ [ { required: true, message: 'Province is required' } ] }\n                initialValue={ language }\n              >\n                <Select style={{ width :'80px' }}  onChange={ (value)=>{changeLang(value); } }>\n                  <Option value=\"zh-CN\" >中文</Option>\n                  <Option value=\"en-US\" >英文</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name={ [ 'address', 'street' ] }\n                noStyle\n                rules={ [ { required: true, message: \"Restaurant's name is required\" } ] }\n              >\n                <Input style={{ width : '50%' }} placeholder=\"Input value\" ref={inputRef} value={ _.get(afterUpdatedRestaurant,`name[${language}]`) }  onBlur={ (e)=>{changeInput(e);} }/>\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n          <Form.Item label=\"餐馆标签：\">\n            <Form.Item>\n              <Select style={{ width :'120px',margin :'0 10px 6px 0' }} defaultValue={ tags[0] } onChange={ (value)=>{addTag(value);} }>\n                {renderTagList()}\n              </Select>\n              {renderTags()}\n            </Form.Item>\n          </Form.Item>\n          <Form.Item label=\"开门时间：\">\n            <Form.Item>\n              <h3>纽约当地时间</h3>\n              <h1 >{newYork}</h1>\n              {renderTimeList()}\n            </Form.Item>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n// export default React.memo(ModalBox,(preProps,nextProps)=>{\n\n//   // console.log(pre.name);\n//   // console.log(next.name);\n//   return true;\n// });\n"]},"metadata":{},"sourceType":"module"}