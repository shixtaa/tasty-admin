{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/state/reducer.js\";\nimport React from 'react';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { setStorage, getStorage } from '../../../../../Common/utils';\nimport { showLoading, hideLoading } from '../../../../../Redux/Reducer/loading';\nimport { updateRestaurant } from '../../../../../Request/restaurant';\nimport { Alert } from 'antd';\nexport const languageSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    lang: getStorage('language') || 'zh-CN'\n  },\n  reducers: {\n    setZh: state => {\n      state.lang = 'zh-CN';\n      setStorage('language', 'zh-CN');\n    },\n    setEn: state => {\n      state.lang = 'en-US';\n      setStorage('language', 'en-US');\n    }\n  }\n});\nexport const {\n  setZh,\n  setEn\n} = languageSlice.actions;\nexport const updateRest = value => async dispatch => {\n  try {\n    dispatch(showLoading());\n    let result = await updateRestaurant(value);\n    return result;\n  } catch (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } finally {\n    dispatch(hideLoading());\n  }\n};\nexport default languageSlice.reducer;","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/state/reducer.js"],"names":["React","createSlice","setStorage","getStorage","showLoading","hideLoading","updateRestaurant","Alert","languageSlice","name","initialState","lang","reducers","setZh","state","setEn","actions","updateRest","value","dispatch","result","error","reducer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAoBC,UAApB,QAAsC,6BAAtC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,sCAAxC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,OAAO,MAAMC,aAAa,GAAGP,WAAW,CAAC;AACvCQ,EAAAA,IAAI,EAAE,SADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAACR,UAAU,CAAC,UAAD,CAAV,IAA0B;AADnB,GAFyB;AAKvCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACH,IAAN,GAAa,OAAb;AACAT,MAAAA,UAAU,CAAC,UAAD,EAAY,OAAZ,CAAV;AACD,KAJO;AAKRa,IAAAA,KAAK,EAAGD,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACH,IAAN,GAAa,OAAb;AACAT,MAAAA,UAAU,CAAC,UAAD,EAAY,OAAZ,CAAV;AACD;AARO;AAL6B,CAAD,CAAjC;AAiBP,OAAO,MAAM;AAAEW,EAAAA,KAAF;AAASE,EAAAA;AAAT,IAAmBP,aAAa,CAACQ,OAAvC;AAEP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW,MAAQC,QAAR,IAAoB;AACvD,MAAI;AACFA,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACA,QAAIgB,MAAM,GAAG,MAAMd,gBAAgB,CAACY,KAAD,CAAnC;AACA,WAAOE,MAAP;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,wBACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAGA,KAAjB;AAAyB,MAAA,IAAI,EAAC,OAA9B;AAAsC,MAAA,QAAQ;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GARD,SAQQ;AACNF,IAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AACD;AACF,CAZM;AAcP,eAAeG,aAAa,CAACc,OAA7B","sourcesContent":["import React from 'react';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { setStorage,getStorage } from '../../../../../Common/utils';\nimport { showLoading,hideLoading } from '../../../../../Redux/Reducer/loading';\nimport { updateRestaurant } from '../../../../../Request/restaurant';\nimport { Alert } from 'antd';\n\nexport const languageSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    lang:getStorage('language') || 'zh-CN'\n  },\n  reducers: {\n    setZh: (state) => {\n      state.lang = 'zh-CN';\n      setStorage('language','zh-CN');\n    },\n    setEn: (state) => {\n      state.lang = 'en-US';\n      setStorage('language','en-US');\n    }\n  },\n});\n\nexport const { setZh ,setEn } = languageSlice.actions;\n\nexport const updateRest = (value) => async ( dispatch)=> {\n  try {\n    dispatch(showLoading());\n    let result = await updateRestaurant(value);\n    return result;\n  } catch (error) {\n    return (\n      <Alert message={ error } type=\"error\" showIcon />\n    );\n  }finally{\n    dispatch(hideLoading());\n  }\n};\n\nexport default languageSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}