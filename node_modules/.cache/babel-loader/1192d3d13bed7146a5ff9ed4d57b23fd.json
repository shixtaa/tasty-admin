{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { message } from 'antd';\nimport { showLoading, hideLoading } from '../../../../../Redux/Reducer/loading';\nimport { order } from '../../../../../Request/order';\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    list: []\n  },\n  reducers: {\n    loadOrder: (state, action) => {\n      state.list = action.payload;\n    }\n  }\n});\nexport const {\n  loadOrder\n} = orderSlice.actions;\nexport const getOrder = (start, end) => async dispatch => {\n  try {\n    dispatch(showLoading());\n    let result = await order(start, end);\n    dispatch(loadOrder(result.list));\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  } finally {\n    dispatch(hideLoading());\n  }\n};\nexport default orderSlice.reducer;","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Order/state/reducer.js"],"names":["createSlice","message","showLoading","hideLoading","order","orderSlice","name","initialState","list","reducers","loadOrder","state","action","payload","actions","getOrder","start","end","dispatch","result","error","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,sCAAxC;AACA,SAASC,KAAT,QAAqB,8BAArB;AAEA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GAFsB;AAKpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACxBD,MAAAA,KAAK,CAACH,IAAN,GAAWI,MAAM,CAACC,OAAlB;AACD;AAHO;AAL0B,CAAD,CAA9B;AAYP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAgBL,UAAU,CAACS,OAAjC;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAOC,GAAP,KAAc,MAAMC,QAAN,IAAmB;AACvD,MAAI;AACFA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACA,QAAIiB,MAAM,GAAC,MAAMf,KAAK,CAACY,KAAD,EAAOC,GAAP,CAAtB;AACAC,IAAAA,QAAQ,CAACR,SAAS,CAACS,MAAM,CAACX,IAAR,CAAV,CAAR;AACA,WAAOW,MAAP;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdnB,IAAAA,OAAO,CAACmB,KAAR,CAAcA,KAAK,CAACnB,OAApB;AACD,GAPD,SAOQ;AACNiB,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD;AACF,CAXM;AAaP,eAAeE,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { message } from 'antd';\nimport { showLoading,hideLoading } from '../../../../../Redux/Reducer/loading';\nimport { order} from '../../../../../Request/order'\n\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState: {\n    list: []\n  },\n  reducers: {\n    loadOrder:(state,action)=>{\n      state.list=action.payload\n    }\n  },\n});\n\nexport const { loadOrder } = orderSlice.actions;\n\nexport const getOrder = (start,end) =>async(dispatch )=> {\n  try {\n    dispatch(showLoading());\n    let result=await order(start,end)\n    dispatch(loadOrder(result.list))\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  }finally{\n    dispatch(hideLoading());\n  }\n};\n\nexport default orderSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}