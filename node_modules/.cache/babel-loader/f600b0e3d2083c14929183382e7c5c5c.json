{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\n\nimport { setEn, setZh } from '../state/reducer';\nimport { getTags } from '../../../State/action';\n/* lodash */\n\nimport _ from 'lodash';\nconst {\n  Option\n} = Select;\nexport default function ModalBox(info) {\n  _s();\n\n  const language = useSelector(state => state.language.lang);\n  const tags = useSelector(state => state.restaurant.tags); // console.log(info.perItem);\n\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(info.perItem.name[`${language}`]);\n  const inputRef = useRef();\n\n  async function changeLang(value) {\n    if (value == 'zh-CN') {\n      await dispatch(setZh());\n    } else {\n      await dispatch(setEn());\n    }\n\n    setInputValue(info.perItem.name[`${language}`]);\n  }\n\n  useEffect(async () => {\n    await dispatch(getTags());\n  }, []);\n  useEffect(async () => {\n    await setInputValue(info.perItem.name[`${language}`]);\n    inputRef.current.state.value = inputValue;\n  }, [language, inputValue, info.perItem]);\n\n  function renderTag() {\n    return _.map(tags.list, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item,\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    });\n  }\n}\n\n_s(ModalBox, \"b9geAZuo3SPdMN8QewsbdudmBh4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js"],"names":["React","useState","useEffect","useRef","Form","Input","Select","useDispatch","useSelector","setEn","setZh","getTags","_","Option","ModalBox","info","language","state","lang","tags","restaurant","dispatch","inputValue","setInputValue","perItem","name","inputRef","changeLang","value","current","renderTag","map","list","item","Math","random"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA;;AACA,SAASC,KAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA;;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaP,MAAnB;AAEA,eAAe,SAASQ,QAAT,CAAmBC,IAAnB,EAAyB;AAAA;;AACtC,QAAMC,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACD,QAAN,CAAeE,IAAvB,CAA5B;AACA,QAAMC,IAAI,GAAGX,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACG,UAAN,CAAiBD,IAAzB,CAAxB,CAFsC,CAGtC;;AACA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAAEe,UAAF,EAAaC,aAAb,IAA+BtB,QAAQ,CAACc,IAAI,CAACS,OAAL,CAAaC,IAAb,CAAmB,GAAET,QAAS,EAA9B,CAAD,CAA7C;AACA,QAAMU,QAAQ,GAAGvB,MAAM,EAAvB;;AAEA,iBAAewB,UAAf,CAA2BC,KAA3B,EAAiC;AAC/B,QAAGA,KAAK,IAAI,OAAZ,EAAoB;AAClB,YAAMP,QAAQ,CAACX,KAAK,EAAN,CAAd;AACD,KAFD,MAEK;AACH,YAAMW,QAAQ,CAACZ,KAAK,EAAN,CAAd;AACD;;AACDc,IAAAA,aAAa,CAACR,IAAI,CAACS,OAAL,CAAaC,IAAb,CAAmB,GAAET,QAAS,EAA9B,CAAD,CAAb;AACD;;AAEDd,EAAAA,SAAS,CAAC,YAAU;AAClB,UAAMmB,QAAQ,CAACV,OAAO,EAAR,CAAd;AACD,GAFQ,EAEP,EAFO,CAAT;AAIAT,EAAAA,SAAS,CAAE,YAAU;AAEnB,UAAMqB,aAAa,CAACR,IAAI,CAACS,OAAL,CAAaC,IAAb,CAAmB,GAAET,QAAS,EAA9B,CAAD,CAAnB;AAEAU,IAAAA,QAAQ,CAACG,OAAT,CAAiBZ,KAAjB,CAAuBW,KAAvB,GAA+BN,UAA/B;AAED,GANQ,EAMP,CAAEN,QAAF,EAAWM,UAAX,EAAsBP,IAAI,CAACS,OAA3B,CANO,CAAT;;AAOA,WAASM,SAAT,GAAqB;AAEnB,WAAOlB,CAAC,CAACmB,GAAF,CAAMZ,IAAI,CAACa,IAAX,EAAiBC,IAAD,IAAQ;AAE7B,0BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAGA,IAAhB;AAAA,kBAA8CA;AAA9C,SAA6BC,IAAI,CAACC,MAAL,EAA7B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KALM,CAAP;AAMD;AACF;;GArCuBrB,Q;UACLN,W,EACJA,W,EAEID,W;;;KAJKO,Q","sourcesContent":["import React,{ useState,useEffect, useRef } from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\nimport { setEn,setZh } from '../state/reducer';\nimport { getTags } from '../../../State/action';\n\n/* lodash */\nimport _ from 'lodash';\n\nconst { Option } = Select;\n\nexport default function ModalBox (info) {\n  const language = useSelector(state=>state.language.lang);\n  const tags = useSelector(state=>state.restaurant.tags);\n  // console.log(info.perItem);\n  const dispatch = useDispatch();\n  const [ inputValue,setInputValue ] = useState(info.perItem.name[`${language}`]);\n  const inputRef = useRef();\n\n  async function changeLang (value){\n    if(value == 'zh-CN'){\n      await dispatch(setZh());\n    }else{\n      await dispatch(setEn());\n    }\n    setInputValue(info.perItem.name[`${language}`]);\n  }\n\n  useEffect(async ()=>{\n    await dispatch(getTags());\n  },[]);\n\n  useEffect( async ()=>{\n\n    await setInputValue(info.perItem.name[`${language}`]);\n\n    inputRef.current.state.value = inputValue;\n\n  },[ language,inputValue,info.perItem ]);\n  function renderTag (){\n\n    return _.map(tags.list,(item)=>{\n\n      return (\n        <Option value={ item } key={ Math.random() }>{item}</Option>\n      );\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}