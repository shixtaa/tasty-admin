{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Order/Order.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\n/* style */\n\nimport './order.scss';\n/* antd */\n\nimport { DatePicker, Space } from 'antd';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\n/* lodash */\n\nimport _ from 'lodash';\n/* echarts */\n// 引入 ECharts 主模块\n\nimport echarts from 'echarts/lib/echarts'; // 引入环形图\n\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/chart/line'; // 引入提示框和标题组件\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title'; // import 'echarts/lib/component/visualMap';\n\n/* actions */\n\nimport { getOrder, clearOrder } from './state/reducer';\nimport { useDispatch } from 'react-redux';\nconst {\n  RangePicker\n} = DatePicker;\nexport default function Order() {\n  _s();\n\n  const orderList = useSelector(state => state.order.list);\n  const dispatch = useDispatch(); // const quantityRef=useRef()\n\n  const peopleRef = useRef();\n  const quantityLineRef = useRef();\n  const quantityPieRef = useRef();\n  /* eslint-disable */\n\n  useEffect(() => {\n    dispatch(clearOrder());\n    quantityLine();\n    quantityPie();\n    renderPeople();\n  }, []);\n  useEffect(() => {\n    if (orderList.length > 0) {\n      quantityLine();\n      quantityPie();\n      renderPeople();\n    }\n  }, [orderList.length]);\n  /* 去重，计算数量 */\n\n  function handleData(array, params) {\n    let list = [];\n    console.log(array);\n\n    _.forIn(_.groupBy(array, params), (value, key) => {\n      let item = {\n        name: '',\n        count: 0\n      };\n      item.name = key.toString();\n      item.count = value.length;\n      list.push(item);\n    });\n\n    return list;\n  }\n  /* 订单量数据 */\n\n\n  function quantityData() {\n    let array = [];\n\n    _.map(orderList, item => {\n      array.push({\n        date: moment(item.createdAt).format('YYYY-MM-DD')\n      });\n    });\n\n    let list = handleData(array, 'date');\n\n    let piedata = _.map(list, item => {\n      return {\n        name: item.name,\n        //value和name是echarts规定的，呜呜呜\n        value: item.count\n      };\n    });\n\n    let data = _.orderBy(piedata, 'name', 'asc');\n\n    return data;\n  }\n  /* 订单量-折线图 */\n\n\n  function quantityLine() {\n    let data = quantityData();\n    echarts.init(quantityLineRef.current).setOption({\n      title: {\n        text: '订单量',\n        textStyle: {\n          color: '#fff',\n          fontSize: 20\n        }\n      },\n      legend: {\n        data: ['订单量']\n      },\n      xAxis: {\n        boundaryGap: false,\n        data: _.map(data, item => {\n          return item.name;\n        })\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '订单量',\n        itemStyle: {\n          normal: {\n            label: {\n              show: true\n            }\n          }\n        },\n        type: 'line',\n        smooth: true,\n        data: _.map(data, item => {\n          return item.value;\n        })\n      }]\n    });\n  }\n  /* 订单量-饼图 */\n\n\n  function quantityPie() {\n    let data = quantityData();\n    echarts.init(quantityPieRef.current).setOption({\n      series: [{\n        name: '订单量',\n        type: 'pie',\n        radius: '45%',\n        label: {\n          formatter: '{b}: {c} ({d}%)',\n          textStyle: {\n            color: '#fff',\n            fontSize: 12\n          }\n        },\n        data: data\n      }]\n    });\n  }\n  /* 订单人群 */\n\n\n  function renderPeople() {\n    let array = [];\n\n    _.map(orderList, item => {\n      if (item.user) {\n        array.push(item.user);\n      } else {\n        array.push(' ');\n      }\n    });\n\n    let list = handleData(array, 'username');\n\n    var piedata = _.map(list, item => {\n      return {\n        name: item.name,\n        //value和name是echarts规定的，呜呜呜\n        value: item.count\n      };\n    });\n\n    echarts.init(peopleRef.current).setOption({\n      title: {\n        text: '订单人群',\n        textStyle: {\n          color: '#fff',\n          fontSize: 20\n        }\n      },\n      series: [{\n        name: '订单人群',\n        type: 'pie',\n        radius: '55%',\n        label: {\n          formatter: '{b}: {c} ({d}%)',\n          textStyle: {\n            color: '#fff',\n            fontSize: 12\n          }\n        },\n        data: piedata\n      }]\n    });\n  }\n\n  async function changeData(date, dateString) {\n    // let start= moment(dateString[0]).utc().toISOString();\n    // let end= moment(dateString[1]).utc().toISOString();\n    let start = `${dateString[0]}T08:28:34.125Z`;\n    let end = `${dateString[1]}T08:28:34.125Z`;\n    await dispatch(getOrder(start, end));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      size: 20,\n      children: /*#__PURE__*/_jsxDEV(RangePicker, {\n        style: {\n          width: '800px'\n        },\n        onChange: changeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-quantity\"\n        /* ref={quantityRef} */\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-line\",\n          ref: quantityLineRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-pie\",\n          ref: quantityPieRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-people\",\n        ref: peopleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Order, \"lBWclNEQbgikA5lQTbehfa2JRlA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Order/Order.js"],"names":["React","useEffect","useRef","DatePicker","Space","useSelector","moment","_","echarts","getOrder","clearOrder","useDispatch","RangePicker","Order","orderList","state","order","list","dispatch","peopleRef","quantityLineRef","quantityPieRef","quantityLine","quantityPie","renderPeople","length","handleData","array","params","console","log","forIn","groupBy","value","key","item","name","count","toString","push","quantityData","map","date","createdAt","format","piedata","data","orderBy","init","current","setOption","title","text","textStyle","color","fontSize","legend","xAxis","boundaryGap","yAxis","type","series","itemStyle","normal","label","show","smooth","radius","formatter","user","changeData","dateString","start","end","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\n/* style */\nimport './order.scss'\n/* antd */\nimport { DatePicker, Space } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport moment from 'moment'\n/* lodash */\nimport _ from 'lodash'\n/* echarts */\n // 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n// 引入环形图\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/chart/line';\n\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n// import 'echarts/lib/component/visualMap';\n\n/* actions */\nimport {getOrder,clearOrder} from './state/reducer'\nimport { useDispatch } from 'react-redux';\n\nconst { RangePicker } = DatePicker;\nexport default function Order () {\n  const orderList=useSelector(state=>state.order.list)\n  const dispatch=useDispatch()\n  // const quantityRef=useRef()\n  const peopleRef =useRef()\n  const quantityLineRef=useRef()\n  const quantityPieRef=useRef()\n  /* eslint-disable */\n  useEffect(()=>{\n    dispatch(clearOrder())\n    quantityLine()\n    quantityPie()\n    renderPeople()\n  },[])\n  useEffect(()=>{\n    if(orderList.length>0){\n      quantityLine()\n      quantityPie()\n      renderPeople()\n    }\n  },[orderList.length])\n\n/* 去重，计算数量 */\nfunction handleData(array,params){\n  let list=[]\n  console.log(array)\n  _.forIn(_.groupBy(array,params),(value,key)=>{\n    let item = {\n      name:'',\n      count : 0\n    };\n    item.name = key.toString();\n    item.count = value.length;\n    list.push(item);\n  })\n    return list\n}\n\n  /* 订单量数据 */\nfunction quantityData(){\n  let array = []\n  _.map(orderList,(item)=>{\n    array.push({date:moment(item.createdAt).format('YYYY-MM-DD')})\n  })\n  let list=handleData(array,'date')\n  let piedata = _.map(list,(item) => {\n    return {\n      name: item.name,   //value和name是echarts规定的，呜呜呜\n      value: item.count,\n    };\n  });\n  let data=_.orderBy(piedata,'name','asc')\n  return data\n}\n  /* 订单量-折线图 */\nfunction quantityLine(){\n  let data=quantityData()\n  echarts.init(quantityLineRef.current).setOption({\n    title: {\n      text: '订单量',\n      textStyle: {\n        color: '#fff',\n        fontSize: 20,\n      },\n    },\n    legend:{\n      data:['订单量']\n    },\n    xAxis: {\n      boundaryGap: false,\n      data: _.map(data,(item)=>{return item.name})\n\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [\n      {\n        name: '订单量',\n        itemStyle : { normal: {label : {show: true}}},\n        type: 'line',\n        smooth: true,\n        data:_.map(data,(item)=>{return item.value})\n      }\n    ]\n  })\n}\n  /* 订单量-饼图 */\nfunction quantityPie(){\n  let data=quantityData()\n  echarts.init(quantityPieRef.current).setOption({\n  series: [\n    {\n      name: '订单量',\n      type: 'pie',\n      radius: '45%',\n      label: {\n        formatter: '{b}: {c} ({d}%)',\n        textStyle: {\n          color: '#fff',\n          fontSize: 12,\n        },\n      },\n      data: data\n    },\n  ]\n  })\n}\n  /* 订单人群 */\nfunction renderPeople(){\n  let array = []\n  _.map(orderList,(item)=>{\n    if(item.user){\n      array.push(item.user)\n    }\n    else{\n      array.push(' ')\n    }\n  })\n  let list=handleData(array,'username')\n  var piedata = _.map(list,(item) => {\n    return {\n      name: item.name,   //value和name是echarts规定的，呜呜呜\n      value: item.count,\n    };\n  });\n  echarts.init(peopleRef.current).setOption({\n    title: {\n      text: '订单人群',\n      textStyle: {\n        color: '#fff',\n        fontSize: 20,\n      },\n    },\n    series: [\n      {\n        name: '订单人群',\n        type: 'pie',\n        radius: '55%',\n        label: {\n          formatter: '{b}: {c} ({d}%)',\n          textStyle: {\n            color: '#fff',\n            fontSize: 12,\n          },\n        },\n        data: piedata\n      },]\n  })\n}\n\n\n\nasync function changeData(date, dateString){\n  // let start= moment(dateString[0]).utc().toISOString();\n  // let end= moment(dateString[1]).utc().toISOString();\n  let start= `${dateString[0]}T08:28:34.125Z`;\n  let end= `${dateString[1]}T08:28:34.125Z`;\n  await dispatch(getOrder(start,end))\n}\n\n  return (\n    <div>\n      <Space direction=\"vertical\" size={ 20 }>\n        <RangePicker style={{ width :'800px' }} onChange={changeData}/>\n      </Space>\n      <div className='main'>\n        <div className='order-quantity' /* ref={quantityRef} */>\n          <div className='quantity-line' ref={quantityLineRef} ></div>\n          <div className='quantity-pie'  ref={quantityPieRef}  ></div>\n        </div>\n        <div className='order-people' ref={peopleRef}></div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}