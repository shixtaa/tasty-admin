{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n/* antd */\n\nimport { Table, Tag, Switch } from 'antd';\n/* request */\n\nimport { getRest } from '../../State/action';\n/* lodash */\n\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function Restaurant() {\n  _s();\n\n  const [dataSource, setDataSource] = useState([]);\n  const list = useSelector(state => state.restaurant.list);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    await dispatch(getRest());\n    renderList();\n  }, [list.length]);\n  /* 渲染restarant列表 */\n\n  function renderList() {\n    let array = [];\n\n    _.map(list, item => {\n      array.push({\n        name: item.name['zh-CN'],\n        address: item.address.formatted,\n        tags: item.tags,\n        id: item._id\n      });\n    });\n\n    setDataSource(array);\n  }\n\n  function onChange(check) {\n    console.log(`switch to ${checked}`);\n  }\n\n  const columns = [{\n    title: '餐馆',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: '地址',\n    dataIndex: 'address',\n    key: 'address'\n  }, {\n    title: '标签',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: tags.map(tag => {\n        let color = tag.length > 5 ? 'geekblue' : 'green';\n\n        if (tag === 'loser') {\n          color = 'volcano';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          children: tag.toUpperCase()\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false)\n  }, {\n    title: '操作',\n    key: 'action'\n  }, {\n    title: '手动关闭',\n    key: 'closed',\n    render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"return (\", /*#__PURE__*/_jsxDEV(Switch, {\n        defaultChecked: true,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), \")\"]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Restaurant, \"6vRCJ5cF0o3P3kMylhj2Xw9whWw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/Restaurant.js"],"names":["React","useEffect","useState","Table","Tag","Switch","getRest","_","useDispatch","useSelector","Restaurant","dataSource","setDataSource","list","state","restaurant","dispatch","renderList","length","array","map","item","push","name","address","formatted","tags","id","_id","onChange","check","console","log","checked","columns","title","dataIndex","key","render","tag","color","toUpperCase"],"mappings":"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","sourcesContent":["import React, {  useEffect,useState } from 'react';\n/* antd */\nimport { Table,Tag,Switch } from 'antd';\n\n/* request */\nimport { getRest } from '../../State/action';\n/* lodash */\nimport _ from 'lodash';\nimport {  useDispatch ,useSelector } from 'react-redux';\n\nexport default function Restaurant () {\n  const [ dataSource,setDataSource ] = useState([]);\n  const list = useSelector(state=>state.restaurant.list);\n  const dispatch = useDispatch();\n  useEffect( async ()=>{\n    await dispatch(getRest());\n    renderList();\n  },[ list.length ]);\n\n  /* 渲染restarant列表 */\n  function renderList (){\n    let array = [];\n    _.map(list,(item)=>{\n      array.push({\n        name:item.name['zh-CN'],\n        address:item.address.formatted,\n        tags:item.tags,\n        id:item._id\n      });\n    });\n    setDataSource(array);\n  }\n\n  function onChange (check){\n    console.log(`switch to ${checked}`);\n  }\n  const columns = [\n    {\n      title: '餐馆',\n      dataIndex: 'name',\n      key: 'name'\n    },\n    {\n      title: '地址',\n      dataIndex: 'address',\n      key: 'address',\n    },\n    {\n      title: '标签',\n      key: 'tags',\n      dataIndex: 'tags',\n      render: tags => (\n        <>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={ color } key={ tag }>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: '操作',\n      key: 'action'\n    },\n    {\n      title: '手动关闭',\n      key: 'closed',\n      render:()=> (\n        <>\n        return (<Switch defaultChecked onChange={ onChange } />)\n        </>\n      )\n    },\n  ];\n  return (\n    <div>\n      <Table dataSource={ dataSource } columns={ columns } />;\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}