{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Common/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, useHistory } from 'react-router-dom'; // import { getStorage } from './utils';\n\nimport { useSelector } from 'react-redux';\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const user = useSelector(state => state.login.user);\n  const history = useHistory();\n  let auth = true; // let user = getStorage('user');\n\n  /* 当path为/时，已登录进admin，未登录进login */\n\n  if (rest.path === '/') {\n    if (user) {\n      history.push('/admin/restaurant');\n    } else {\n      auth = false;\n    }\n  }\n\n  if (user && user.role === 'visitor' && rest.path === '/admin/order') {\n    history.push('/admin/restaurant');\n  } // /** 如果未登录 不可以进入除login以外页面 */\n\n\n  if (!user) {\n    if (rest.path !== '/login') {\n      auth = false;\n    }\n  } else {\n    auth = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => {\n      return auth ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 31\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateRoute, \"0c5hgktC2/GlPrwq/wG2JnrZghw=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  component: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Common/PrivateRoute.js"],"names":["React","PropTypes","Route","Redirect","useHistory","useSelector","PrivateRoute","component","Component","rest","user","state","login","history","auth","path","push","role","propTypes","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAeC,QAAf,EAAyBC,UAAzB,QAA2C,kBAA3C,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,YAAT,CAAuB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAyB,KAAGC;AAA5B,CAAvB,EAA2D;AAAA;;AACxE,QAAMC,IAAI,GAACL,WAAW,CAACM,KAAK,IAAEA,KAAK,CAACC,KAAN,CAAYF,IAApB,CAAtB;AACA,QAAMG,OAAO,GAACT,UAAU,EAAxB;AACA,MAAIU,IAAI,GAAG,IAAX,CAHwE,CAIxE;;AAEA;;AACA,MAAGL,IAAI,CAACM,IAAL,KAAc,GAAjB,EAAqB;AACnB,QAAGL,IAAH,EAAQ;AACNG,MAAAA,OAAO,CAACG,IAAR,CAAa,mBAAb;AACD,KAFD,MAEK;AACHF,MAAAA,IAAI,GAAC,KAAL;AACD;AACF;;AAED,MAAGJ,IAAI,IAAEA,IAAI,CAACO,IAAL,KAAY,SAAlB,IAA6BR,IAAI,CAACM,IAAL,KAAc,cAA9C,EAA6D;AAC3DF,IAAAA,OAAO,CAACG,IAAR,CAAa,mBAAb;AACD,GAjBuE,CAmBxE;;;AACA,MAAG,CAACN,IAAJ,EAAS;AACP,QAAGD,IAAI,CAACM,IAAL,KAAc,QAAjB,EAA0B;AACxBD,MAAAA,IAAI,GAAG,KAAP;AACD;AACF,GAJD,MAIK;AACHA,IAAAA,IAAI,GAAG,IAAP;AACD;;AAED,sBAEE,QAAC,KAAD,OAAYL,IAAZ;AAAmB,IAAA,MAAM,EAAG,MAAI;AAC9B,aAEEK,IAAI,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFxB;AAKD;AAND;AAAA;AAAA;AAAA;AAAA,UAFF;AAWD;;GAvCuBR,Y;UACXD,W,EACGD,U;;;KAFQE,Y;AAyCxBA,YAAY,CAACY,SAAb,GAAyB;AACvBX,EAAAA,SAAS,EAAEN,SAAS,CAACkB;AADE,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route,Redirect, useHistory } from 'react-router-dom';\n// import { getStorage } from './utils';\nimport { useSelector } from 'react-redux';\n\nexport default function PrivateRoute ({ component: Component , ...rest }) {\n  const user=useSelector(state=>state.login.user)\n  const history=useHistory()\n  let auth = true;\n  // let user = getStorage('user');\n  \n  /* 当path为/时，已登录进admin，未登录进login */\n  if(rest.path === '/'){\n    if(user){\n      history.push('/admin/restaurant')\n    }else{\n      auth=false\n    }\n  }\n\n  if(user&&user.role==='visitor'&&rest.path === '/admin/order'){\n    history.push('/admin/restaurant')\n  }\n\n  // /** 如果未登录 不可以进入除login以外页面 */\n  if(!user){\n    if(rest.path !== '/login'){\n      auth = false;\n    }\n  }else{\n    auth = true;\n  }\n\n  return (\n\n    <Route { ...rest } render={ ()=>{\n      return (\n\n        auth ? <Component/> : <Redirect to='/login'></Redirect>\n      );\n\n    } } ></Route>\n\n  );\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func\n};\n\n"]},"metadata":{},"sourceType":"module"}