{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { setStorage, getStorage } from '../../../../../Common/utils';\nimport { showLoading, hideLoading } from '../../../../../Redux/Reducer/loading';\nimport { updateRestaurant } from '../../../../../Request/restaurant';\nimport { message } from 'antd';\nimport { getRest } from '../../../State/reducer';\nexport const languageSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    lang: getStorage('language') || 'zh-CN'\n  },\n  reducers: {\n    setZh: state => {\n      state.lang = 'zh-CN';\n      setStorage('language', 'zh-CN');\n    },\n    setEn: state => {\n      state.lang = 'en-US';\n      setStorage('language', 'en-US');\n    }\n  }\n});\nexport const {\n  setZh,\n  setEn\n} = languageSlice.actions;\nexport const updateRest = value => async dispatch => {\n  try {\n    await dispatch(showLoading());\n    let result = await updateRestaurant(value);\n    await dispatch(getRest());\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  } finally {\n    await dispatch(hideLoading());\n  }\n};\nexport default languageSlice.reducer;","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/state/reducer.js"],"names":["createSlice","setStorage","getStorage","showLoading","hideLoading","updateRestaurant","message","getRest","languageSlice","name","initialState","lang","reducers","setZh","state","setEn","actions","updateRest","value","dispatch","result","error","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAoBC,UAApB,QAAsC,6BAAtC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,sCAAxC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAGR,WAAW,CAAC;AACvCS,EAAAA,IAAI,EAAE,SADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAACT,UAAU,CAAC,UAAD,CAAV,IAA0B;AADnB,GAFyB;AAKvCU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACH,IAAN,GAAa,OAAb;AACAV,MAAAA,UAAU,CAAC,UAAD,EAAY,OAAZ,CAAV;AACD,KAJO;AAKRc,IAAAA,KAAK,EAAGD,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACH,IAAN,GAAa,OAAb;AACAV,MAAAA,UAAU,CAAC,UAAD,EAAY,OAAZ,CAAV;AACD;AARO;AAL6B,CAAD,CAAjC;AAiBP,OAAO,MAAM;AAAEY,EAAAA,KAAF;AAASE,EAAAA;AAAT,IAAmBP,aAAa,CAACQ,OAAvC;AAEP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW,MAAQC,QAAR,IAAoB;AACvD,MAAI;AACF,UAAMA,QAAQ,CAAChB,WAAW,EAAZ,CAAd;AACA,QAAIiB,MAAM,GAAG,MAAMf,gBAAgB,CAACa,KAAD,CAAnC;AACA,UAAMC,QAAQ,CAACZ,OAAO,EAAR,CAAd;AACA,WAAOa,MAAP;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdf,IAAAA,OAAO,CAACe,KAAR,CAAcA,KAAK,CAACf,OAApB;AACD,GAPD,SAOQ;AACN,UAAMa,QAAQ,CAACf,WAAW,EAAZ,CAAd;AACD;AACF,CAXM;AAaP,eAAeI,aAAa,CAACc,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { setStorage,getStorage } from '../../../../../Common/utils';\nimport { showLoading,hideLoading } from '../../../../../Redux/Reducer/loading';\nimport { updateRestaurant } from '../../../../../Request/restaurant';\nimport { message } from 'antd';\nimport { getRest } from '../../../State/reducer';\n\nexport const languageSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    lang:getStorage('language') || 'zh-CN'\n  },\n  reducers: {\n    setZh: (state) => {\n      state.lang = 'zh-CN';\n      setStorage('language','zh-CN');\n    },\n    setEn: (state) => {\n      state.lang = 'en-US';\n      setStorage('language','en-US');\n    }\n  },\n});\n\nexport const { setZh ,setEn } = languageSlice.actions;\n\nexport const updateRest = (value) => async ( dispatch)=> {\n  try {\n    await dispatch(showLoading());\n    let result = await updateRestaurant(value);\n    await dispatch(getRest());\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  }finally{\n    await dispatch(hideLoading());\n  }\n};\n\nexport default languageSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}