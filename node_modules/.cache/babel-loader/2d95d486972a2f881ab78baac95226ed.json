{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect\n/* , useRef */\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\n\nimport { setEn, setZh, updateRest } from '../state/reducer';\nimport { hideModal } from '../../Admin/State/reducer';\n/* lodash */\n\nimport _ from 'lodash';\n/* moment */\n\nimport moment from 'moment-timezone';\n/* antd */\n\nimport { Modal, Form, Input, Select, Tag, TimePicker, Button } from 'antd';\nmoment.locale('zh-cn', {\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_')\n});\nconst {\n  Option\n} = Select;\nconst {\n  RangePicker\n} = TimePicker; // import { renderOption } from '../../../../../Common/utils';\n\n/* export default  */\n\nfunction ModalBox() {\n  _s();\n\n  const language = useSelector(state => state.language.lang);\n  const tags = useSelector(state => state.restaurant.tags);\n  const selectedList = useSelector(state => state.restaurant.selectedItem);\n  const isShow = useSelector(state => state.restaurant.isShow);\n  console.log(_.get(selectedList, `name[${language}]`)); // const [ inputValue,setInputValue ] = useState(selectedList.name[`${language}`]);\n\n  const [time, setTime] = useState(new Date());\n  const [tagList] = useState(_.cloneDeep(selectedList.tags));\n  const [hour] = useState(_.cloneDeep(selectedList.hours));\n  const [afterUpdatedRestaurant, setAfterUpdatedRestaurant] = useState(selectedList);\n  console.log(afterUpdatedRestaurant);\n  const dispatch = useDispatch(); // const inputRef = useRef(inputValue);\n\n  /* 纽约时间 */\n\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n  /* 确认 */\n\n  async function handleOk() {\n    /* 更新信息 */\n    let data = {\n      id: selectedList._id,\n      data: { ..._.omit(afterUpdatedRestaurant, '_id')\n      }\n    };\n    await dispatch(updateRest(data));\n    /* 隐藏modal */\n\n    handleCancel();\n  }\n  /* 取消modal */\n\n\n  function handleCancel() {\n    dispatch(hideModal());\n  }\n  /* 改变语言 */\n\n\n  async function changeLang(value) {\n    if (value === 'zh-CN') {\n      await dispatch(setZh());\n    } else {\n      await dispatch(setEn());\n    } // setInputValue(selectedList.name[`${value}`])\n\n  }\n  /* 每秒循环时间 */\n\n\n  useEffect(() => {// let timer = setInterval(()=>{\n    //   setTime(new Date());\n    // },1000);\n    // return ()=>{\n    //   if (timer){\n    //     clearInterval(timer);\n    //   }\n    // };\n  }, []);\n  /* eslint-disable */\n  // useEffect(  ()=>{\n  //   // console.log(hour)\n  //   // console.log(inputRef)\n  //   console.log(inputValue)\n  //   inputRef.current = inputValue;\n  // },[ language ]);\n\n  /* 渲染所有的tags列表 */\n\n  function renderTagList() {\n    return _.map(tags, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item,\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* 增加tags */\n\n\n  function addTag(value) {\n    if (_.indexOf(tagList, value) === -1) {\n      tagList.push(value);\n    }\n\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      tags: tagList\n    });\n  }\n  /*删除tags */\n\n\n  function removeTag(index) {\n    tagList.splice(index, 1);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      tags: tagList\n    });\n  }\n  /* 渲染餐馆的tags */\n\n\n  function renderTags() {\n    if (selectedList.tags) {\n      return tagList.map((tag, index) => {\n        let color = tag.length > 5 ? 'geekblue' : 'green';\n\n        if (tag === 'loser') {\n          color = 'volcano';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          closable: true,\n          onClose: () => {\n            removeTag(index);\n          },\n          style: {\n            marginRight: '10px'\n          },\n          children: tag.toUpperCase()\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this);\n      });\n    } // console.log('renderTags')\n    // // \n\n  }\n  /* 修改菜名input */\n\n\n  function changeInput(e) {\n    let name = e.target.value;\n\n    if (inputValue !== name) {\n      setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n        name: { ...selectedList.name,\n          [`${language}`]: name\n        }\n      });\n    }\n  }\n  /* 修改时间 */\n\n\n  function changeHour(time, timeString, index) {\n    let startarr = timeString[0].split(':');\n    let endarr = timeString[1].split(':');\n    let start = parseInt(startarr[0]) * 60 + parseInt(startarr[1]);\n    let end = parseInt(endarr[0]) * 60 + parseInt(endarr[1]);\n    hour[index].start = start;\n    hour[index].end = end;\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      hours: hour\n    });\n  }\n  /* 获取一段范围内的所有数值 */\n\n\n  function range(start, end) {\n    const result = [];\n\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  }\n  /* 时间选择 */\n\n\n  function renderTimeList() {\n    let array = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];\n    return _.map(array, (item, index) => {\n      // let hourInfo = selectedList.hours[index];\n      // let result = hourInfo ? [ moment().startOf('day').add(hourInfo.start,'minutes'),moment().startOf('day').add(hourInfo.end,'minutes')] : [ '00:00:00','00:00:00' ];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: true,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, selectedList._id + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: _.get(selectedList, `name[${language}]`),\n      visible: isShow,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u540D\\u79F0\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Input.Group, {\n            compact: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['name', 'province'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Province is required'\n              }],\n              initialValue: language,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                style: {\n                  width: '80px'\n                },\n                onChange: value => {\n                  changeLang(value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"zh-CN\",\n                  children: \"\\u4E2D\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"en-US\",\n                  children: \"\\u82F1\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['address', 'street'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Street is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  width: '50%'\n                },\n                placeholder: \"Input value\",\n                value: _.get(selectedList, `name${language}`),\n                onBlur: e => {\n                  changeInput(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u6807\\u7B7E\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: '120px',\n                margin: '0 10px 6px 0'\n              },\n              defaultValue: tags[0],\n              onChange: value => {\n                addTag(value);\n              },\n              children: renderTagList()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), renderTags()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u5F00\\u95E8\\u65F6\\u95F4\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u7EBD\\u7EA6\\u5F53\\u5730\\u65F6\\u95F4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: newYork\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), renderTimeList()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalBox, \"qTDm7IwnxuNATQnFzR4ldl7XS4g=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ModalBox;\nexport default _c2 = /*#__PURE__*/React.memo(ModalBox, (preProps, nextProps) => {\n  // console.log(pre.name);\n  // console.log(next.name);\n  return true;\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalBox\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Restaurant/Component/ModalBox.js"],"names":["React","useState","useEffect","useDispatch","useSelector","setEn","setZh","updateRest","hideModal","_","moment","Modal","Form","Input","Select","Tag","TimePicker","Button","locale","weekdays","split","Option","RangePicker","ModalBox","language","state","lang","tags","restaurant","selectedList","selectedItem","isShow","console","log","get","time","setTime","Date","tagList","cloneDeep","hour","hours","afterUpdatedRestaurant","setAfterUpdatedRestaurant","dispatch","newYork","tz","format","handleOk","data","id","_id","omit","handleCancel","changeLang","value","renderTagList","map","item","Math","random","addTag","indexOf","push","removeTag","index","splice","renderTags","tag","color","length","marginRight","toUpperCase","changeInput","e","name","target","inputValue","changeHour","timeString","startarr","endarr","start","parseInt","end","range","result","i","renderTimeList","array","required","message","width","margin","memo","preProps","nextProps"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect/* , useRef */ } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\nimport { setEn,setZh ,updateRest } from '../state/reducer';\nimport { hideModal } from '../../Admin/State/reducer';\n\n\n/* lodash */\nimport _ from 'lodash';\n\n/* moment */\nimport moment from 'moment-timezone';\n\n/* antd */\nimport { Modal,Form, Input, Select ,Tag ,TimePicker ,Button } from 'antd';\n\nmoment.locale('zh-cn',{ weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), });\nconst { Option } = Select;\nconst { RangePicker } = TimePicker;\n// import { renderOption } from '../../../../../Common/utils';\n\n/* export default  */\nfunction ModalBox () {\n  const language = useSelector(state=>state.language.lang);\n  const tags = useSelector(state=>state.restaurant.tags);\n  const selectedList = useSelector(state=>state.restaurant.selectedItem);\n  const isShow = useSelector(state=>state.restaurant.isShow);\nconsole.log(_.get(selectedList,`name[${language}]`))\n  // const [ inputValue,setInputValue ] = useState(selectedList.name[`${language}`]);\n  const [ time,setTime ] = useState(new Date());\n  const [ tagList ] = useState(_.cloneDeep(selectedList.tags));\n  const [ hour ] = useState(_.cloneDeep(selectedList.hours));\n  const [ afterUpdatedRestaurant,setAfterUpdatedRestaurant ] = useState(selectedList);\nconsole.log(afterUpdatedRestaurant)\n  const dispatch = useDispatch();\n\n  // const inputRef = useRef(inputValue);\n\n  /* 纽约时间 */\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n\n  /* 确认 */\n  async function handleOk (){\n    /* 更新信息 */\n    let data = {\n      id:selectedList._id,\n      data:{\n        ..._.omit(afterUpdatedRestaurant,'_id')\n      }\n    };\n    await dispatch(updateRest(data));\n    /* 隐藏modal */\n    handleCancel();\n\n  }\n  /* 取消modal */\n  function handleCancel () {\n    dispatch(hideModal());\n  }\n\n  /* 改变语言 */\n  async function changeLang (value){\n    if(value === 'zh-CN'){\n      await dispatch(setZh());\n    }else{\n      await dispatch(setEn());\n    }\n    // setInputValue(selectedList.name[`${value}`])\n  }\n\n  /* 每秒循环时间 */\n  useEffect(()=>{\n    // let timer = setInterval(()=>{\n    //   setTime(new Date());\n    // },1000);\n    // return ()=>{\n    //   if (timer){\n    //     clearInterval(timer);\n    //   }\n    // };\n  },[]);\n/* eslint-disable */\n  // useEffect(  ()=>{\n  //   // console.log(hour)\n  //   // console.log(inputRef)\n  //   console.log(inputValue)\n  //   inputRef.current = inputValue;\n  // },[ language ]);\n\n  /* 渲染所有的tags列表 */\n  function renderTagList (){\n    return _.map(tags,(item)=>{\n      return (\n        <Option value={ item } key={ Math.random() }>{item}</Option>\n      );\n    });\n  }\n  /* 增加tags */\n  function addTag (value){\n    if(_.indexOf(tagList,value) === -1){\n      tagList.push(value);\n      }\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,tags:tagList });\n  }\n\n  /*删除tags */\n  function removeTag (index){\n    tagList.splice(index,1);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,tags:tagList });\n  }\n\n  /* 渲染餐馆的tags */\n  function renderTags (){\n    if(selectedList.tags){\n      return tagList.map((tag,index) => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={ color } key={ Math.random() } closable onClose={ ()=>{removeTag(index);} } style={{ marginRight :'10px' }}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        });\n    }\n    // console.log('renderTags')\n    // // \n  }\n\n  /* 修改菜名input */\n  function changeInput (e){\n    let name = e.target.value;\n\n    if(inputValue !== name){\n      setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,name:{ ...selectedList.name,[`${language}`]:name } });\n    }\n  }\n  /* 修改时间 */\n  function changeHour (time,timeString,index){\n    let startarr = timeString[0].split(':');\n    let endarr = timeString[1].split(':');\n    let start = parseInt(startarr[0]) * 60 + parseInt(startarr[1]);\n    let end = parseInt(endarr[0]) * 60 + parseInt(endarr[1]);\n    hour[index].start = start\n    hour[index].end = end;\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,hours:hour });\n  }\n  /* 获取一段范围内的所有数值 */\n  function range(start, end) {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n  /* 时间选择 */\n  function renderTimeList (){\n    let array = [ '星期一','星期二','星期三','星期四','星期五','星期六','星期天' ];\n    return _.map(array, (item,index)=>{\n      // let hourInfo = selectedList.hours[index];\n      // let result = hourInfo ? [ moment().startOf('day').add(hourInfo.start,'minutes'),moment().startOf('day').add(hourInfo.end,'minutes')] : [ '00:00:00','00:00:00' ];\n      return (\n        <div key={ selectedList._id + index }>\n          <Button type=\"primary\" disabled>\n            {item}\n          </Button>\n          {/* <RangePicker disabledSeconds={()=> range(0, 60)} defaultValue={result} onChange={(time,timeString)=>{changeHour(time,timeString,index)}}></RangePicker> */}\n        </div>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <Modal\n        title={ _.get(selectedList,`name[${language}]`) }\n        visible={ isShow }\n        onOk={ handleOk }\n        onCancel={ handleCancel }\n      >\n        <Form >\n          <Form.Item label=\"餐馆名称：\">\n            <Input.Group compact>\n              <Form.Item\n                name={ [ 'name', 'province' ] }\n                noStyle\n                rules={ [ { required: true, message: 'Province is required' } ] }\n                initialValue={ language }\n              >\n                <Select style={{ width :'80px' }}  onChange={ (value)=>{changeLang(value); } }>\n                  <Option value=\"zh-CN\" >中文</Option>\n                  <Option value=\"en-US\" >英文</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name={ [ 'address', 'street' ] }\n                noStyle\n                rules={ [ { required: true, message: 'Street is required' } ] }\n              >\n                <Input style={{ width : '50%' }} placeholder=\"Input value\" value={ _.get(selectedList,`name${language}`) }  onBlur={ (e)=>{changeInput(e);} }/>\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n          <Form.Item label=\"餐馆标签：\">\n            <Form.Item>\n              <Select style={{ width :'120px',margin :'0 10px 6px 0' }} defaultValue={ tags[0] } onChange={ (value)=>{addTag(value);} }>\n                {renderTagList()}\n              </Select>\n              {renderTags()}\n            </Form.Item>\n          </Form.Item>\n          <Form.Item label=\"开门时间：\">\n            <Form.Item>\n              <h3>纽约当地时间</h3>\n              <h1 >{newYork}</h1>\n              {renderTimeList()}\n            </Form.Item>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\nexport default React.memo(ModalBox,(preProps,nextProps)=>{\n\n  // console.log(pre.name);\n  // console.log(next.name);\n  return true;\n});\n"]},"metadata":{},"sourceType":"module"}