{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { setEn, setZh } from '../state/reducer';\nimport { useDispatch } from 'react-redux';\nconst {\n  Option\n} = Select;\nexport default function ModalBox(item) {\n  _s();\n\n  // const language = useSelector(state=>state.language.lang);\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n\n  function changeLang(value) {\n    if (value == 'zh-CN') {\n      dispatch(setZh());\n    } else {\n      dispatch(setEn());\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Address\",\n      children: /*#__PURE__*/_jsxDEV(Input.Group, {\n        compact: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['address', 'province'],\n          noStyle: true,\n          rules: [{\n            required: true,\n            message: 'Province is required'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: '80px'\n            },\n            onChange: value => {\n              changeLang(value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"zh-CN\",\n              children: \"\\u4E2D\\u6587\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"en-US\",\n              children: \"\\u82F1\\u6587\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['address', 'street'],\n          noStyle: true,\n          rules: [{\n            required: true,\n            message: 'Street is required'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: '50%'\n            },\n            placeholder: \"Input street\",\n            value: item.name,\n            onChange: e => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalBox, \"ctqHIqfn8+dgYN4RTFeTGx9DPD4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/Component/ModalBox.js"],"names":["React","Form","Input","Select","setEn","setZh","useDispatch","Option","ModalBox","item","dispatch","inputValue","setInputValue","useState","changeLang","value","required","message","width","name","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,KAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaJ,MAAnB;AAEA,eAAe,SAASK,QAAT,CAAmBC,IAAnB,EAAyB;AAAA;;AACtC;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAAEK,UAAF,EAAaC,aAAb,IAA+BC,QAAQ,CAAC,EAAD,CAA7C;;AAEA,WAASC,UAAT,CAAqBC,KAArB,EAA2B;AACzB,QAAGA,KAAK,IAAI,OAAZ,EAAoB;AAClBL,MAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AACD,KAFD,MAEK;AACHK,MAAAA,QAAQ,CAACN,KAAK,EAAN,CAAR;AACD;AACF;;AACD,sBACE;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,SAAjB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,OAAO,MAApB;AAAA,gCACE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAG,CAAE,SAAF,EAAa,UAAb,CADT;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,KAAK,EAAG,CAAE;AAAEY,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAF,CAHV;AAAA,iCAKE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAf;AAAmC,YAAA,QAAQ,EAAIH,KAAD,IAAS;AAACD,cAAAA,UAAU,CAACC,KAAD,CAAV;AAAmB,aAA3E;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAG,CAAE,SAAF,EAAa,QAAb,CADT;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,KAAK,EAAG,CAAE;AAAEC,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAF,CAHV;AAAA,iCAKE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAG;AAAV,aAAd;AAAiC,YAAA,WAAW,EAAC,cAA7C;AAA4D,YAAA,KAAK,EAAGT,IAAI,CAACU,IAAzE;AAAgF,YAAA,QAAQ,EAAIC,CAAD,IAAK,CAAE;AAAlG;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GArCuBZ,Q;UAELF,W;;;KAFKE,Q","sourcesContent":["import React from 'react';\nimport { Form, Input, Select } from 'antd';\nimport { setEn,setZh } from '../state/reducer';\nimport { useDispatch } from 'react-redux';\n\nconst { Option } = Select;\n\nexport default function ModalBox (item) {\n  // const language = useSelector(state=>state.language.lang);\n  const dispatch = useDispatch();\n  const [ inputValue,setInputValue ] = useState('');\n\n  function changeLang (value){\n    if(value == 'zh-CN'){\n      dispatch(setZh());\n    }else{\n      dispatch(setEn());\n    }\n  }\n  return (\n    <div>\n      <Form.Item label=\"Address\">\n        <Input.Group compact>\n          <Form.Item\n            name={ [ 'address', 'province' ] }\n            noStyle\n            rules={ [ { required: true, message: 'Province is required' } ] }\n          >\n            <Select style={{ width :'80px' }}  onChange={ (value)=>{changeLang(value);} }>\n              <Option value=\"zh-CN\" >中文</Option>\n              <Option value=\"en-US\" >英文</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            name={ [ 'address', 'street' ] }\n            noStyle\n            rules={ [ { required: true, message: 'Street is required' } ] }\n          >\n            <Input style={{ width : '50%' }} placeholder=\"Input street\" value={ item.name } onChange={ (e)=>{} }/>\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}