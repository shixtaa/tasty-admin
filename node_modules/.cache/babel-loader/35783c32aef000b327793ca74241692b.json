{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Admin/Components/Restaurant/Restaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n/* antd */\n\nimport { Table, Tag, Switch, Modal, Button } from 'antd';\n/* request */\n\nimport { getRest } from '../../State/action';\n/* lodash */\n\nimport _ from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function Restaurant() {\n  _s();\n\n  const [dataSource, setDataSource] = useState([]);\n  const [isClosed, setIsClosed] = useState(false);\n  const list = useSelector(state => state.restaurant.list);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    await dispatch(getRest());\n    renderList();\n  }, [list.length]);\n  /* 渲染restarant列表 */\n\n  function renderList() {\n    let array = [];\n\n    _.map(list, item => {\n      array.push({\n        name: item.name['zh-CN'],\n        address: item.address.formatted,\n        tags: item.tags,\n        id: item._id\n      });\n    });\n\n    setDataSource(array);\n  }\n  /* 人为关闭 */\n\n\n  function onChange() {\n    setIsClosed(!isClosed);\n  }\n\n  const [actionInfo, setActionInfo] = useState({\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false\n  });\n  /* 打开操作框 */\n\n  function showModal() {\n    setActionInfo({ ...actionInfo,\n      visible: true\n    });\n  }\n  /* 确认 */\n\n\n  function handleOk() {\n    setActionInfo({ ...actionInfo,\n      ModalText: '修改成功！',\n      confirmLoading: true\n    });\n    setActionInfo({ ...actionInfo,\n      visible: false,\n      confirmLoading: false\n    });\n  }\n\n  function handleCancel() {\n    setActionInfo({ ...actionInfo,\n      visible: false\n    });\n  }\n\n  const columns = [{\n    title: '餐馆',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: '地址',\n    dataIndex: 'address',\n    key: 'address'\n  }, {\n    title: '标签',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: tags.map(tag => {\n        let color = tag.length > 5 ? 'geekblue' : 'green';\n\n        if (tag === 'loser') {\n          color = 'volcano';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          children: tag.toUpperCase()\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false)\n  }, {\n    title: '操作',\n    key: 'action',\n    render: () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: showModal,\n          children: \"\\u64CD\\u4F5C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Title\",\n          visible: actionInfo.visible,\n          onOk: handleOk,\n          confirmLoading: actionInfo.confirmLoading,\n          onCancel: handleCancel,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: actionInfo.ModalText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: '手动关闭',\n    key: 'closed',\n    render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Restaurant, \"CTXjl0haLTMBbzj3itDrGNtHZzE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Admin/Components/Restaurant/Restaurant.js"],"names":["React","useEffect","useState","Table","Tag","Switch","Modal","Button","getRest","_","useDispatch","useSelector","Restaurant","dataSource","setDataSource","isClosed","setIsClosed","list","state","restaurant","dispatch","renderList","length","array","map","item","push","name","address","formatted","tags","id","_id","onChange","actionInfo","setActionInfo","ModalText","visible","confirmLoading","showModal","handleOk","handleCancel","columns","title","dataIndex","key","render","tag","color","toUpperCase"],"mappings":"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","sourcesContent":["import React, {  useEffect,useState } from 'react';\n/* antd */\nimport { Table,Tag,Switch,Modal, Button } from 'antd';\n\n/* request */\nimport { getRest } from '../../State/action';\n/* lodash */\nimport _ from 'lodash';\nimport {  useDispatch ,useSelector } from 'react-redux';\n\nexport default function Restaurant () {\n  const [ dataSource,setDataSource ] = useState([]);\n  const [ isClosed,setIsClosed ] = useState(false);\n  const list = useSelector(state=>state.restaurant.list);\n  const dispatch = useDispatch();\n  useEffect( async ()=>{\n    await dispatch(getRest());\n    renderList();\n  },[ list.length ]);\n\n  /* 渲染restarant列表 */\n  function renderList (){\n    let array = [];\n    _.map(list,(item)=>{\n      array.push({\n        name:item.name['zh-CN'],\n        address:item.address.formatted,\n        tags:item.tags,\n        id:item._id\n      });\n    });\n    setDataSource(array);\n  }\n\n  /* 人为关闭 */\n  function onChange (){\n    setIsClosed(!isClosed);\n  }\n\n  const [ actionInfo,setActionInfo ] = useState({\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n  });\n\n  /* 打开操作框 */\n  function showModal (){\n    setActionInfo({ ...actionInfo,visible: true });\n  }\n  /* 确认 */\n  function handleOk (){\n    setActionInfo({\n      ...actionInfo,\n      ModalText: '修改成功！',\n      confirmLoading: true,\n    });\n    setActionInfo({\n      ...actionInfo,\n      visible: false,\n      confirmLoading: false,\n    });\n  }\n\n  function handleCancel () {\n    setActionInfo({\n      ...actionInfo,\n      visible: false\n    });\n  }\n  const columns = [\n    {\n      title: '餐馆',\n      dataIndex: 'name',\n      key: 'name'\n    },\n    {\n      title: '地址',\n      dataIndex: 'address',\n      key: 'address',\n    },\n    {\n      title: '标签',\n      key: 'tags',\n      dataIndex: 'tags',\n      render: tags => (\n        <>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={ color } key={ tag }>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render:()=>{\n        return (\n          <div>\n            <Button type=\"primary\" onClick={ showModal }>\n          操作\n            </Button>\n            <Modal\n              title=\"Title\"\n              visible={ actionInfo.visible }\n              onOk={ handleOk }\n              confirmLoading={ actionInfo.confirmLoading }\n              onCancel={ handleCancel }\n            >\n              <p>{actionInfo.ModalText}</p>\n            </Modal>\n          </div>\n        );\n      }\n    },\n    {\n      title: '手动关闭',\n      key: 'closed',\n      render:()=> (\n        <>\n          <Switch  onChange={ onChange } />\n        </>\n      )\n    },\n  ];\n  return (\n    <div>\n      <Table dataSource={ dataSource } columns={ columns } />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}