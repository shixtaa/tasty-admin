{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\nimport { parse, compile } from 'path-to-regexp';\nimport CustomError from './CustomError'; // import { get } from './utils';\n\n/* 30 sec timeout */\n\naxios.defaults.timeout = 30000;\n/**\n * request\n */\n\nconst fetch = options => {\n  let {\n    url\n  } = options;\n  const {\n    data = {},\n    headers = {},\n    method\n  } = options; //   const token = _.get(get('user'), 'token');\n  //   if (token) {\n  //      headers.Authorization = `${token}`;\n  //   }\n\n  headers['Content-Type'] = 'application/json';\n  /* cache */\n\n  headers['Cache-Control'] = 'no-cache';\n  /* Clone request body data */\n\n  const cloneData = _.cloneDeep(data);\n\n  try {\n    let domin = '';\n\n    if (url.match(/[a-zA-z]+:\\/\\/[^/]*/)) {\n      const {\n        0: val\n      } = url.match(/[a-zA-z]+:\\/\\/[^/]*/);\n      domin = val;\n      url = url.slice(domin.length);\n    }\n\n    const match = parse(url);\n    url = compile(url)(data);\n\n    _.forEach(match, item => {\n      if (item instanceof Object && item.name in cloneData) {\n        delete cloneData[item.name];\n      }\n    });\n\n    url = domin + url;\n  } catch (e) {\n    console.log(e);\n\n    _.noop();\n  }\n\n  switch (_.toLower(method)) {\n    case 'get':\n      return axios.get(url, {\n        params: cloneData,\n        headers\n      });\n\n    case 'delete':\n      return axios.delete(url, {\n        data: cloneData,\n        headers\n      });\n\n    case 'post':\n      return axios.post(url, cloneData, {\n        headers\n      });\n\n    case 'put':\n      return axios.put(url, cloneData, {\n        headers\n      });\n\n    case 'patch':\n      return axios.patch(url, cloneData, {\n        headers\n      });\n\n    default:\n      return axios(options);\n  }\n};\n/**\n * Default request function\n */\n\n\nexport default async function request(options) {\n  try {\n    const res = await fetch(options);\n\n    let data = _.get(res, 'data', {});\n    /* convert list to object */\n\n\n    if (_.isArray(data)) {\n      data = {\n        list: data\n      };\n    }\n\n    return data;\n  } catch (error) {\n    // throw new Error(error.message);\n    throw new CustomError(error); //   throw error;\n  }\n}","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Common/request.js"],"names":["axios","_","parse","compile","CustomError","defaults","timeout","fetch","options","url","data","headers","method","cloneData","cloneDeep","domin","match","val","slice","length","forEach","item","Object","name","e","console","log","noop","toLower","get","params","delete","post","put","patch","request","res","isArray","list","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport _ from 'lodash';\n\nimport { parse,compile } from 'path-to-regexp';\nimport CustomError from './CustomError';\n// import { get } from './utils';\n\n/* 30 sec timeout */\naxios.defaults.timeout = 30000;\n\n/**\n * request\n */\nconst fetch = (options) => {\n\n  let { url } = options;\n  const { data = {}, headers = {}, method } = options;\n\n  //   const token = _.get(get('user'), 'token');\n\n  //   if (token) {\n  //      headers.Authorization = `${token}`;\n  //   }\n\n  headers['Content-Type'] = 'application/json';\n\n  /* cache */\n  headers['Cache-Control'] = 'no-cache';\n\n  /* Clone request body data */\n  const cloneData = _.cloneDeep(data);\n\n  try {\n    let domin = '';\n\n    if (url.match(/[a-zA-z]+:\\/\\/[^/]*/)) {\n      const { 0: val } = url.match(/[a-zA-z]+:\\/\\/[^/]*/);\n\n      domin = val;\n      url = url.slice(domin.length);\n    }\n\n    const match = parse(url);\n\n    url = compile(url)(data);\n\n    _.forEach(match, item => {\n\n      if (item instanceof Object && item.name in cloneData) {\n        delete cloneData[item.name];\n      }\n    });\n    url = domin + url;\n\n  } catch (e) {\n\n    console.log(e);\n    _.noop();\n  }\n\n  switch (_.toLower(method)) {\n  case 'get':\n    return axios.get(url, { params: cloneData, headers });\n  case 'delete':\n    return axios.delete(url, { data: cloneData, headers });\n  case 'post':\n    return axios.post(url, cloneData, { headers });\n  case 'put':\n    return axios.put(url, cloneData, { headers });\n  case 'patch':\n    return axios.patch(url, cloneData, { headers });\n  default:\n    return axios(options);\n  }\n};\n\n/**\n * Default request function\n */\nexport default async function request (options) {\n\n  try {\n    const res = await fetch(options);\n    let data = _.get(res, 'data', {});\n\n    /* convert list to object */\n    if (_.isArray(data)) {\n      data = { list: data };\n    }\n\n    return data;\n  } catch (error) {\n\n    // throw new Error(error.message);\n    throw new CustomError(error);\n    //   throw error;\n  }\n}"]},"metadata":{},"sourceType":"module"}