{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { message } from 'antd';\nimport { showLoading, hideLoading } from '../../../Redux/Reducer/loading';\nimport { login } from '../../../Request/login';\nexport const loginSlice = createSlice({\n  name: 'order',\n  initialState: {\n    user: ''\n  },\n  reducers: {\n    saveUser: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.user = '';\n    }\n  }\n});\nexport const {\n  saveUser\n} = loginSlice.actions;\nexport const postLogin = data => async dispatch => {\n  try {\n    dispatch(showLoading());\n    let result = await login(data);\n    console.log(result);\n    dispatch(saveUser(result));\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  } finally {\n    dispatch(hideLoading());\n  }\n};\nexport default loginSlice.reducer;","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Login/state/reducer.js"],"names":["createSlice","message","showLoading","hideLoading","login","loginSlice","name","initialState","user","reducers","saveUser","state","action","payload","logout","actions","postLogin","data","dispatch","result","console","log","error","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,gCAAxC;AACA,SAAQC,KAAR,QAAqB,wBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAC;AADO,GAFsB;AAKpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACvBD,MAAAA,KAAK,CAACH,IAAN,GAAWI,MAAM,CAACC,OAAlB;AACD,KAHO;AAIRC,IAAAA,MAAM,EAAEH,KAAD,IAAS;AACdA,MAAAA,KAAK,CAACH,IAAN,GAAW,EAAX;AACD;AANO;AAL0B,CAAD,CAA9B;AAeP,OAAO,MAAM;AAAEE,EAAAA;AAAF,IAAeL,UAAU,CAACU,OAAhC;AAEP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAS,MAAMC,QAAN,IAAmB;AACnD,MAAI;AACFA,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACA,QAAIiB,MAAM,GAAC,MAAMf,KAAK,CAACa,IAAD,CAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,IAAAA,QAAQ,CAACR,QAAQ,CAACS,MAAD,CAAT,CAAR;AACA,WAAOA,MAAP;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdrB,IAAAA,OAAO,CAACqB,KAAR,CAAcA,KAAK,CAACrB,OAApB;AACD,GARD,SAQQ;AACNiB,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AACD;AACF,CAZM;AAcP,eAAeE,UAAU,CAACkB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { message } from 'antd';\nimport { showLoading,hideLoading } from '../../../Redux/Reducer/loading';\nimport {login } from '../../../Request/login'\n\nexport const loginSlice = createSlice({\n  name: 'order',\n  initialState: {\n    user:''\n  },\n  reducers: {\n    saveUser:(state,action)=>{\n      state.user=action.payload\n    },\n    logout:(state)=>{\n      state.user=''\n    }\n  },\n});\n\nexport const { saveUser } = loginSlice.actions;\n\nexport const postLogin = (data) =>async(dispatch )=> {\n  try {\n    dispatch(showLoading());\n    let result=await login(data)\n    console.log(result)\n    dispatch(saveUser(result))\n    return result;\n  } catch (error) {\n    message.error(error.message);\n  }finally{\n    dispatch(hideLoading());\n  }\n};\n\nexport default loginSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}