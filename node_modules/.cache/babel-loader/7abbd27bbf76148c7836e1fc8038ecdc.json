{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shixt/Documents/user/\\u6700\\u7EC8\\u9879\\u76EE/tasty-admin/src/Features/Restaurant/Component/ModalBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\n\nimport { setEn, setZh, updateRest } from '../state/reducer';\nimport { hideModal } from '../../Admin/State/reducer';\n/* lodash */\n\nimport _ from 'lodash';\n/* moment */\n\nimport moment from 'moment-timezone';\n/* antd */\n\nimport { Modal, Form, Input, Select, Tag, TimePicker, Button } from 'antd';\nmoment.locale('zh-cn', {\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_')\n});\nconst {\n  Option\n} = Select;\nconst {\n  RangePicker\n} = TimePicker; // import { renderOption } from '../../../../../Common/utils';\n\nexport default function ModalBox() {\n  _s();\n\n  const language = useSelector(state => state.language.lang);\n  const tags = useSelector(state => state.restaurant.tags);\n  const selectedList = useSelector(state => state.restaurant.selectedItem);\n  const isShow = useSelector(state => state.restaurant.isShow);\n  const [inputValue, setInputValue] = useState('');\n  const [time, setTime] = useState(new Date());\n  const [tagList, setTagList] = useState([]);\n  const [hour, setHour] = useState([]);\n  const [afterUpdatedRestaurant, setAfterUpdatedRestaurant] = useState({});\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  /* 纽约时间 */\n\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n  /* 确认 */\n\n  function handleOk() {\n    /* 更新信息 */\n    let data = {\n      id: selectedList._id,\n      data: { ..._.omit(afterUpdatedRestaurant, '_id')\n      }\n    };\n    dispatch(updateRest(data));\n    /* 隐藏modal */\n\n    handleCancel();\n  }\n  /* 取消modal */\n\n\n  function handleCancel() {\n    dispatch(hideModal());\n  }\n  /* 改变语言 */\n\n\n  async function changeLang(value) {\n    if (value === 'zh-CN') {\n      await dispatch(setZh());\n    } else {\n      await dispatch(setEn());\n    }\n  }\n  /* 每秒循环时间 */\n\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n  /* eslint-disable */\n\n  useEffect(() => {\n    setInputValue(selectedList.name[`${language}`]);\n    setTagList(selectedList.tags);\n    setAfterUpdatedRestaurant(selectedList);\n    setHour(selectedList.hours);\n    inputRef.current.state.value = inputValue;\n  }, [language, inputValue]);\n  /* 渲染所有的tags列表 */\n\n  function renderTagList() {\n    return _.map(tags, item => {\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: item,\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* 增加tags */\n\n\n  function changeTag(value) {\n    let cloneList = _.cloneDeep(tagList);\n\n    if (_.indexOf(cloneList, value) === -1) {\n      cloneList.push(value);\n    }\n\n    setTagList(cloneList);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      tags: cloneList\n    });\n  }\n  /*删除tags */\n\n\n  function close(index) {\n    let cloneList = _.cloneDeep(tagList);\n\n    cloneList.splice(index, 1);\n    setTagList(cloneList);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      tags: cloneList\n    });\n  }\n  /* 渲染餐馆的tags */\n\n\n  function renderTags() {\n    return tagList.map((tag, index) => {\n      let color = tag.length > 5 ? 'geekblue' : 'green';\n\n      if (tag === 'loser') {\n        color = 'volcano';\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        closable: true,\n        onClose: () => {\n          close(index);\n        },\n        style: {\n          marginRight: '10px'\n        },\n        children: tag.toUpperCase()\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  /* format开关时间 */\n\n\n  function formatTime(value) {\n    return `${value / 60}:${value % 60}:00`;\n  }\n  /* picker的默认时间 */\n\n\n  function gethour(info) {\n    let hourList = [moment(formatTime(info[0]), 'HH:mm:ss'), moment(formatTime(info[1]), 'HH:mm:ss')];\n    return hourList;\n  }\n  /* 修改菜名input */\n\n\n  function changeInput(e) {\n    let name = e.target.value;\n\n    if (inputValue !== name) {\n      setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n        name: { ...selectedList.name,\n          [`${language}`]: name\n        }\n      });\n    }\n  }\n  /* 修改时间 */\n\n\n  function changeHour(time, timeString, index) {\n    let startarr = timeString[0].split(':');\n    let endarr = timeString[1].split(':');\n    let start = parseInt(startarr[0]) * 60 + parseInt(startarr[1]);\n    let end = parseInt(endarr[0]) * 60 + parseInt(endarr[1]);\n\n    let cloneHours = _.cloneDeep(selectedList.hours[index]);\n\n    cloneHours.start = start;\n    cloneHours.end = end;\n\n    let newHour = _.cloneDeep(hour);\n\n    newHour[index] = cloneHours;\n    setHour(newHour);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,\n      hours: newHour\n    });\n  }\n  /* 获取一段范围内的所有数值 */\n\n\n  function range(start, end) {\n    const result = [];\n\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  }\n  /* 时间选择 */\n\n\n  function renderTimeList() {\n    let array = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];\n    return _.map(array, (item, index) => {\n      let hourInfo = selectedList.hours[index];\n      let result = hourInfo ? [hourInfo.start, hourInfo.end] : ['00:00:00', '00:00:00'];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          disabled: true,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n          disabledSeconds: () => range(0, 60),\n          defaultValue: gethour(result),\n          onChange: (time, timeString) => {\n            changeHour(time, timeString, index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, selectedList._id + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: selectedList.name[`${language}`],\n      visible: isShow,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u540D\\u79F0\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Input.Group, {\n            compact: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['name', 'province'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Province is required'\n              }],\n              initialValue: language,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                style: {\n                  width: '80px'\n                },\n                onChange: value => {\n                  changeLang(value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"zh-CN\",\n                  children: \"\\u4E2D\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"en-US\",\n                  children: \"\\u82F1\\u6587\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['address', 'street'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Street is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                style: {\n                  width: '50%'\n                },\n                placeholder: \"Input value\"\n                /* ref={ inputRef } */\n                ,\n                value: inputValue,\n                onBlur: e => {\n                  changeInput(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u9910\\u9986\\u6807\\u7B7E\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              style: {\n                width: '120px',\n                margin: '0 10px 6px 0'\n              },\n              defaultValue: tags[0],\n              onChange: value => {\n                changeTag(value);\n              },\n              children: renderTagList()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), renderTags()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u5F00\\u95E8\\u65F6\\u95F4\\uFF1A\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u7EBD\\u7EA6\\u5F53\\u5730\\u65F6\\u95F4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: newYork\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), renderTimeList()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalBox, \"MSkvHu/9rEmAMx/2Gn1EUREaMEI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"sources":["/Users/shixt/Documents/user/最终项目/tasty-admin/src/Features/Restaurant/Component/ModalBox.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","setEn","setZh","updateRest","hideModal","_","moment","Modal","Form","Input","Select","Tag","TimePicker","Button","locale","weekdays","split","Option","RangePicker","ModalBox","language","state","lang","tags","restaurant","selectedList","selectedItem","isShow","inputValue","setInputValue","time","setTime","Date","tagList","setTagList","hour","setHour","afterUpdatedRestaurant","setAfterUpdatedRestaurant","dispatch","inputRef","newYork","tz","format","handleOk","data","id","_id","omit","handleCancel","changeLang","value","timer","setInterval","clearInterval","name","hours","current","renderTagList","map","item","Math","random","changeTag","cloneList","cloneDeep","indexOf","push","close","index","splice","renderTags","tag","color","length","marginRight","toUpperCase","formatTime","gethour","info","hourList","changeInput","e","target","changeHour","timeString","startarr","endarr","start","parseInt","end","cloneHours","newHour","range","result","i","renderTimeList","array","hourInfo","required","message","width","margin"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n/* actions */\nimport { setEn,setZh ,updateRest } from '../state/reducer';\nimport { hideModal } from '../../Admin/State/reducer';\n\n/* lodash */\nimport _ from 'lodash';\n\n/* moment */\nimport moment from 'moment-timezone';\n\n/* antd */\nimport { Modal,Form, Input, Select ,Tag ,TimePicker ,Button } from 'antd';\n\nmoment.locale('zh-cn',{ weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'), });\nconst { Option } = Select;\nconst { RangePicker } = TimePicker;\n// import { renderOption } from '../../../../../Common/utils';\n\nexport default function ModalBox () {\n  const language = useSelector(state=>state.language.lang);\n  const tags = useSelector(state=>state.restaurant.tags);\n  const selectedList = useSelector(state=>state.restaurant.selectedItem);\n  const isShow = useSelector(state=>state.restaurant.isShow);\n\n  const [ inputValue,setInputValue ] = useState('');\n  const [ time,setTime ] = useState(new Date());\n  const [ tagList,setTagList ] = useState([]);\n  const [ hour,setHour ] = useState([]);\n  const [ afterUpdatedRestaurant,setAfterUpdatedRestaurant ] = useState({});\n\n  const dispatch = useDispatch();\n\n  const inputRef = useRef();\n\n  /* 纽约时间 */\n  var newYork = moment.tz(time, 'America/New_York').format('YYYY-MM-DD HH:mm:ss dddd');\n\n  /* 确认 */\n  function handleOk (){\n    /* 更新信息 */\n    let data = {\n      id:selectedList._id,\n      data:{\n        ..._.omit(afterUpdatedRestaurant,'_id')\n      }\n    };\n    dispatch(updateRest(data));\n    /* 隐藏modal */\n    handleCancel();\n\n  }\n  /* 取消modal */\n  function handleCancel () {\n    dispatch(hideModal());\n  }\n\n  /* 改变语言 */\n  async function changeLang (value){\n    if(value === 'zh-CN'){\n      await dispatch(setZh());\n    }else{\n      await dispatch(setEn());\n    }\n  }\n\n  /* 每秒循环时间 */\n  useEffect(()=>{\n    let timer = setInterval(()=>{\n      setTime(new Date());\n    },1000);\n    return ()=>{\n      if (timer){\n        clearInterval(timer);\n      }\n    };\n  },[]);\n/* eslint-disable */\n  useEffect(  ()=>{\n    setInputValue(selectedList.name[`${language}`]);\n    setTagList(selectedList.tags);\n    setAfterUpdatedRestaurant(selectedList);\n    setHour(selectedList.hours);\n    inputRef.current.state.value = inputValue;\n  },[ language,inputValue ]);\n\n  /* 渲染所有的tags列表 */\n  function renderTagList (){\n    return _.map(tags,(item)=>{\n      return (\n        <Option value={ item } key={ Math.random() }>{item}</Option>\n      );\n    });\n  }\n  /* 增加tags */\n  function changeTag (value){\n    let cloneList = _.cloneDeep(tagList);\n    if(_.indexOf(cloneList,value) === -1){\n      cloneList.push(value);\n    }\n    setTagList(cloneList);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,tags:cloneList });\n  }\n\n  /*删除tags */\n  function close (index){\n    let cloneList = _.cloneDeep(tagList);\n    cloneList.splice(index,1);\n    setTagList(cloneList);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,tags:cloneList });\n\n  }\n\n  /* 渲染餐馆的tags */\n  function renderTags (){\n    return tagList.map((tag,index) => {\n      let color = tag.length > 5 ? 'geekblue' : 'green';\n      if (tag === 'loser') {\n        color = 'volcano';\n      }\n      return (\n        <Tag color={ color } key={ Math.random() } closable onClose={ ()=>{close(index);} } style={{ marginRight :'10px' }}>\n          {tag.toUpperCase()}\n        </Tag>\n      );\n    });}\n\n  /* format开关时间 */\n  function formatTime (value){\n    return `${value / 60}:${value % 60}:00`;\n  }\n\n  /* picker的默认时间 */\n  function gethour (info){\n    let hourList = [\n      moment( formatTime(info[0]),'HH:mm:ss'),\n      moment( formatTime(info[1]),'HH:mm:ss')\n    ];\n    return hourList;\n  }\n  /* 修改菜名input */\n  function changeInput (e){\n    let name = e.target.value;\n    if(inputValue !== name){\n      setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,name:{ ...selectedList.name,[`${language}`]:name } });\n    }\n  }\n  /* 修改时间 */\n  function changeHour (time,timeString,index){\n    let startarr = timeString[0].split(':');\n    let endarr = timeString[1].split(':');\n    let start = parseInt(startarr[0]) * 60 + parseInt(startarr[1]);\n    let end = parseInt(endarr[0]) * 60 + parseInt(endarr[1]);\n    let cloneHours = _.cloneDeep(selectedList.hours[index]);\n    cloneHours.start = start;\n    cloneHours.end = end;\n    let newHour = _.cloneDeep(hour);\n    newHour[index] = cloneHours;\n    setHour(newHour);\n    setAfterUpdatedRestaurant({ ...afterUpdatedRestaurant,hours:newHour });\n  }\n  /* 获取一段范围内的所有数值 */\n  function range(start, end) {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n  /* 时间选择 */\n  function renderTimeList (){\n    let array = [ '星期一','星期二','星期三','星期四','星期五','星期六','星期天' ];\n    return _.map(array, (item,index)=>{\n      let hourInfo = selectedList.hours[index];\n      let result = hourInfo ? [ hourInfo.start,hourInfo.end ] : [ '00:00:00','00:00:00' ];\n      return (\n        <div key={ selectedList._id + index }>\n          <Button type=\"primary\" disabled>\n            {item}\n          </Button>\n          <RangePicker disabledSeconds={()=> range(0, 60)} defaultValue={ gethour(result) } onChange={ (time,timeString)=>{changeHour(time,timeString,index);} } ></RangePicker>\n        </div>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <Modal\n        title={ selectedList.name[`${language}`] }\n        visible={ isShow }\n        onOk={ handleOk }\n        onCancel={ handleCancel }\n      >\n        <Form >\n          <Form.Item label=\"餐馆名称：\">\n            <Input.Group compact>\n              <Form.Item\n                name={ [ 'name', 'province' ] }\n                noStyle\n                rules={ [ { required: true, message: 'Province is required' } ] }\n                initialValue={ language }\n              >\n                <Select style={{ width :'80px' }}  onChange={ (value)=>{changeLang(value); } }>\n                  <Option value=\"zh-CN\" >中文</Option>\n                  <Option value=\"en-US\" >英文</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name={ [ 'address', 'street' ] }\n                noStyle\n                rules={ [ { required: true, message: 'Street is required' } ] }\n              >\n                <Input style={{ width : '50%' }} placeholder=\"Input value\" /* ref={ inputRef } */  value={ inputValue }  onBlur={ (e)=>{changeInput(e);} }/>\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n          <Form.Item label=\"餐馆标签：\">\n            <Form.Item>\n              <Select style={{ width :'120px',margin :'0 10px 6px 0' }} defaultValue={ tags[0] } onChange={ (value)=>{changeTag(value);} }>\n                {renderTagList()}\n              </Select>\n              {renderTags()}\n            </Form.Item>\n          </Form.Item>\n          <Form.Item label=\"开门时间：\">\n            <Form.Item>\n              <h3>纽约当地时间</h3>\n              <h1 >{newYork}</h1>\n              {renderTimeList()}\n            </Form.Item>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}